{"file":"registry-c08e114c.js","mappings":";;AAMA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAuB,CAAC;AACjD,MAAM,KAAK,GAAG,IAAI,GAAG,EAAqB,CAAC;AAC3C,MAAM,UAAU,GAAG,IAAI,GAAG,EAA0B,CAAC;AACrD,MAAM,WAAW,GAAG,IAAI,GAAG,EAA2B,CAAC;MAE1C,QAAQ,GAAG;IACtB,MAAM,gBAAgB,GAAG,CAAC,MAAmB;QAC3C,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QACpB,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,IAAe;QACnC,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QACpB,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpB,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,MAAM,iBAAiB,GAAG,CAAC,SAAyB;QAClD,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QACpB,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAC9B,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,MAAM,kBAAkB,GAAG,CAAC,UAA2B;QACrD,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QACpB,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QAChC,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,MAAM,WAAW,GAAG,CAAC,EAAU,KAAK,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,CAAC,EAAU,KAAK,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9C,MAAM,YAAY,GAAG,CAAC,EAAU,KAAK,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACxD,MAAM,aAAa,GAAG,CAAC,EAAU,KAAK,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAE1D,OAAO;QACL,gBAAgB;QAChB,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,WAAW;QACX,OAAO;QACP,YAAY;QACZ,aAAa;KACd,CAAC;AACJ;;;;","names":[],"sources":["src/registry.ts"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { LogicConnection } from './components';\nimport { FlowyCanvas } from './components/flowy-canvas/flowy-canvas';\nimport { LogicConnector } from './components/logic-connector/logic-connector';\nimport { LogicNode } from './components/logic-node/logic-node';\n\nconst viewports = new Map<string, FlowyCanvas>();\nconst nodes = new Map<string, LogicNode>();\nconst connectors = new Map<string, LogicConnector>();\nconst connections = new Map<string, LogicConnection>();\n\nexport const registry = () => {\n  const registerViewport = (canvas: FlowyCanvas) => {\n    const id = nanoid();\n    viewports.set(id, canvas);\n    return id;\n  };\n\n  const registerNode = (node: LogicNode) => {\n    const id = nanoid();\n    nodes.set(id, node);\n    return id;\n  };\n\n  const registerConnector = (connector: LogicConnector) => {\n    const id = nanoid();\n    connectors.set(id, connector);\n    return id;\n  };\n\n  const registerConnection = (connection: LogicConnection) => {\n    const id = nanoid();\n    connections.set(id, connection);\n    return id;\n  };\n\n  const getViewport = (id: string) => viewports.get(id);\n  const getNode = (id: string) => nodes.get(id);\n  const getConnector = (id: string) => connectors.get(id);\n  const getConnection = (id: string) => connections.get(id);\n\n  return {\n    registerViewport,\n    registerNode,\n    registerConnector,\n    registerConnection,\n    getViewport,\n    getNode,\n    getConnector,\n    getConnection,\n  };\n};\n"],"version":3}
{"file":"logic-connection.entry.esm.js","mappings":";;AAAA,MAAM,kBAAkB,GAAG,sBAAsB;;MCQpC,eAAe;;;qBACH,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;mBAChB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;IACnC,MAAM;QACJ,MAAM,KAAK,GAAG;YACZ,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAExD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,GAAG,GAAG,CAAC,CAAC;;QAGpD,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;cACjC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;cAC5C,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;cACxC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QAErC,QACE,EAAC,IAAI,qDAAC,KAAK,EAAC,kBAAkB,IAC5B,4DAAK,KAAK,EAAC,YAAY,IACrB,6DAAM,KAAK,EAAC,iBAAiB,EAAC,CAAC,EAAE,CAAC,GAAS,CACvC,CACD,EACP;KACH;;;;;;","names":[],"sources":["src/components/logic-connection/logic-connection.css?tag=logic-connection","src/components/logic-connection/logic-connection.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { Point } from '../../types/Point';\n\n@Component({\n  tag: 'logic-connection',\n  styleUrl: 'logic-connection.css',\n  shadow: false,\n})\nexport class LogicConnection {\n  @Prop() start: Point = { x: 0, y: 0 };\n  @Prop() end: Point = { x: 0, y: 0 };\n  render() {\n    const delta = {\n      x: this.end.x - this.start.x,\n      y: this.end.y - this.start.y,\n    };\n    const distance = Math.sqrt(delta.x ** 2 + delta.y ** 2);\n\n    const angle = Math.atan2(delta.y, delta.x);\n    const controlOffset = Math.min(100, distance * 0.3);\n\n    // draw smooth bezier curve\n    const d = `M ${this.start.x},${this.start.y}\n          C ${this.start.x + controlOffset},${this.start.y}\n            ${this.end.x - controlOffset},${this.end.y}\n            ${this.end.x},${this.end.y}`;\n\n    return (\n      <Host class=\"logic-connection\">\n        <svg class=\"connection\">\n          <path class=\"connection-line\" d={d}></path>\n        </svg>\n      </Host>\n    );\n  }\n}\n"],"version":3}
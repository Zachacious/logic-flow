{"file":"logic-node.entry.esm.js","mappings":"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","names":[],"sources":["src/components/logic-node/logic-node.css?tag=logic-node","src/components/logic-node/logic-node.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { Point } from '../../types/Point';\nimport { throttle } from '../../utils/throttle';\nimport { events } from '../../events';\n\n@Component({\n  tag: 'logic-node',\n  styleUrl: 'logic-node.css',\n  shadow: false,\n})\nexport class LogicNode {\n  @Element() el: HTMLElement;\n\n  @Prop() type: string = 'default';\n  @Prop() title: string = 'Node';\n  @Prop({ mutable: true }) position: Point = { x: 0, y: 0 };\n\n  @State() isDragging = false;\n\n  private _dragStart: Point;\n\n  private _throttledPointerMove = throttle(e => this.onPointerMove(e), 30);\n  private _throttledTouchMove = throttle(e => this.handleTouchMove(e), 30);\n\n  private _elMouseDown = (e: MouseEvent | TouchEvent) => this.onPointerDown(e);\n  private _elMouseUp = () => this.onPointerUp();\n  private _elMouseMove = (e: MouseEvent | TouchEvent) =>\n    this._throttledPointerMove(e);\n\n  private _elTouchStart = (e: TouchEvent) => this.handleTouchStart(e);\n  private _elTouchMove = (e: TouchEvent) => this._throttledTouchMove(e);\n  private _elTouchEnd = () => this.onPointerUp();\n\n  componentDidLoad() {\n    // this.updatePosition();\n\n    window.addEventListener('mouseup', this._elMouseUp, { passive: true });\n    window.addEventListener('mousemove', this._elMouseMove, { passive: true });\n\n    this.el.addEventListener('mousedown', this._elMouseDown, { passive: true });\n    // this.el.addEventListener('mouseup', this._elMouseUp, { passive: true });\n    // this.el.addEventListener('mousemove', this._elMouseMove, { passive: true });\n\n    this.el.addEventListener('touchstart', this._elTouchStart, {\n      passive: true,\n    });\n    this.el.addEventListener('touchend', this._elTouchEnd, { passive: true });\n    this.el.addEventListener('touchmove', this._elTouchMove, { passive: true });\n  }\n\n  @Watch('isDragging')\n  onIsDraggingChange() {\n    if (this.isDragging) {\n      events.emit('nodeDragStart', this.el, this.position);\n    } else {\n      events.emit('nodeDragStopped', this.el);\n    }\n  }\n\n  // @Watch('position')\n  // onPositionChange() {\n  //   this.updatePosition();\n  // }\n\n  // updatePosition() {\n  //   this.el.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`;\n  // }\n\n  // getEventLocation(event: MouseEvent | TouchEvent) {\n  //   if (event instanceof TouchEvent) {\n  //     if (event.touches && event.touches[0]) {\n  //       return { x: event.touches[0].clientX, y: event.touches[0].clientY };\n  //     }\n  //   } else {\n  //     return { x: event.clientX, y: event.clientY };\n  //   }\n  // }\n\n  // handle drag and drop positioning\n  onPointerDown(e: MouseEvent | TouchEvent) {\n    e.stopPropagation();\n    this.isDragging = true;\n    // this._dragStart = this.getEventLocation(e);\n  }\n\n  onPointerMove(e: MouseEvent | TouchEvent) {\n    if (!this.isDragging) return;\n    e.stopPropagation();\n    // const loc = this.getEventLocation(e);\n    // const dx = loc.x - this._dragStart.x;\n    // const dy = loc.y - this._dragStart.y;\n    // this.position = { x: this.position.x + dx, y: this.position.y + dy };\n  }\n\n  onPointerUp() {\n    this.isDragging = false;\n    // update position with new transform\n    const transform = this.el.style.transform;\n    const matches = transform.match(/translate\\((\\d+)px, (\\d+)px\\)/);\n    if (matches) {\n      this.position = {\n        x: parseInt(matches[1], 10),\n        y: parseInt(matches[2], 10),\n      };\n    }\n  }\n\n  handleTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    this.onPointerDown(e);\n  }\n\n  handleTouchMove(e: TouchEvent) {\n    e.preventDefault();\n    this.onPointerMove(e);\n  }\n\n  render() {\n    return (\n      <Host class=\"flowy-node\">\n        {/* <div class=\"flowy-node\"> */}\n        <div class=\"flowy-node-header\">\n          {this.title}\n          <slot name=\"header\"></slot>\n        </div>\n        <slot></slot>\n        <div class=\"flowy-node-footer\"></div>\n        {/* </div> */}\n      </Host>\n    );\n  }\n}\n"],"version":3}
{"file":"flowy-canvas.entry.esm.js","mappings":"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","names":["scopedUrlAlphabet"],"sources":["src/utils/throttle.ts","src/utils/getEventLocation.ts","src/types/Quadtree.ts","node_modules/nanoid/url-alphabet/index.js","node_modules/nanoid/index.browser.js","src/types/Camera.ts","src/types/ViewContext.ts","src/utils/renderCanvasGrid.ts","src/components/flowy-canvas/flowy-canvas.css?tag=flowy-canvas","src/components/flowy-canvas/flowy-canvas.tsx"],"sourcesContent":["export const throttle = (fn: (...args: any[]) => void, delay: number) => {\n  let lastFunc: ReturnType<typeof setTimeout>;\n  let lastRan: number;\n  return (...args: any[]) => {\n    if (!lastRan) {\n      fn(...args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(() => {\n        if (Date.now() - lastRan >= delay) {\n          fn(...args);\n          lastRan = Date.now();\n        }\n      }, delay - (Date.now() - lastRan));\n    }\n  };\n};\n","export const getEventLocation = (e: MouseEvent | TouchEvent) => {\n  if (e instanceof MouseEvent) {\n    return { x: e.clientX, y: e.clientY };\n  } else if (e instanceof TouchEvent && e.touches.length > 0) {\n    return { x: e.touches[0].clientX, y: e.touches[0].clientY };\n  } else if (e instanceof TouchEvent && e.changedTouches.length > 0) {\n    return { x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY };\n  }\n  return { x: 0, y: 0 };\n};\n","import { Camera } from './Camera';\n\ninterface Point {\n  x: number;\n  y: number;\n  id: string; // Unique ID of the connector\n}\n\ninterface BoundingBox {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport class Quadtree {\n  boundary: BoundingBox;\n  capacity: number;\n  points: Point[];\n  divided: boolean;\n  northeast: Quadtree | null;\n  northwest: Quadtree | null;\n  southeast: Quadtree | null;\n  southwest: Quadtree | null;\n  camera: Camera;\n\n  constructor(boundary: BoundingBox, capacity: number, camera: Camera) {\n    this.boundary = boundary;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n    this.northeast = null;\n    this.northwest = null;\n    this.southeast = null;\n    this.southwest = null;\n    this.camera = camera;\n  }\n\n  subdivide() {\n    const { x, y, width, height } = this.boundary;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    this.northeast = new Quadtree(\n      { x: x + halfWidth, y: y, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n    this.northwest = new Quadtree(\n      { x: x, y: y, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n    this.southeast = new Quadtree(\n      {\n        x: x + halfWidth,\n        y: y + halfHeight,\n        width: halfWidth,\n        height: halfHeight,\n      },\n      this.capacity,\n      this.camera,\n    );\n    this.southwest = new Quadtree(\n      { x: x, y: y + halfHeight, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n\n    this.divided = true;\n  }\n\n  insert(point: Point): boolean {\n    if (!this.contains(point)) return false;\n\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    } else {\n      if (!this.divided) this.subdivide();\n\n      return (\n        this.northeast!.insert(point) ||\n        this.northwest!.insert(point) ||\n        this.southeast!.insert(point) ||\n        this.southwest!.insert(point)\n      );\n    }\n  }\n\n  insertItems(points: Point[]): void {\n    for (let point of points) {\n      this.insert(point);\n    }\n  }\n\n  remove(id: string): boolean {\n    const removeFromNode = (node: Quadtree | null): boolean => {\n      if (node === null) return false;\n\n      // Remove points from the node\n      node.points = node.points.filter(point => point.id !== id);\n\n      // Recursively remove from child nodes\n      const removed =\n        removeFromNode(node.northwest) ||\n        removeFromNode(node.northeast) ||\n        removeFromNode(node.southwest) ||\n        removeFromNode(node.southeast);\n\n      // If no points in the node and no children have points, remove the node\n      if (node.points.length === 0 && !node.divided) {\n        node.northwest =\n          node.northeast =\n          node.southwest =\n          node.southeast =\n            null;\n      }\n\n      return removed;\n    };\n\n    return removeFromNode(this);\n  }\n\n  removeItems(ids: string[]): void {\n    for (let id of ids) {\n      this.remove(id);\n    }\n  }\n\n  contains(point: Point): boolean {\n    const { x, y, width, height } = this.boundary;\n    return (\n      point.x >= x &&\n      point.x < x + width &&\n      point.y >= y &&\n      point.y < y + height\n    );\n  }\n\n  query(\n    range: BoundingBox,\n    found: Point[] = [],\n    pan: { x: number; y: number },\n    zoom: number,\n  ): Point[] {\n    if (!this.intersects(range)) return found;\n\n    for (let point of this.points) {\n      if (this.inRange(point, range, pan, zoom)) {\n        found.push(point);\n      }\n    }\n\n    if (this.divided) {\n      this.northwest!.query(range, found, pan, zoom);\n      this.northeast!.query(range, found, pan, zoom);\n      this.southwest!.query(range, found, pan, zoom);\n      this.southeast!.query(range, found, pan, zoom);\n    }\n\n    return found;\n  }\n\n  inRange(\n    point: Point,\n    range: BoundingBox,\n    pan: { x: number; y: number },\n    zoom: number,\n  ): boolean {\n    // Adjust the point position relative to pan and zoom\n    const adjPoint = {\n      x: (point.x + pan.x) * zoom,\n      y: (point.y + pan.y) * zoom,\n    };\n\n    // Check if the adjusted point is within the adjusted range\n    return (\n      adjPoint.x >= range.x &&\n      adjPoint.x < range.x + range.width &&\n      adjPoint.y >= range.y &&\n      adjPoint.y < range.y + range.height\n    );\n  }\n\n  intersects(range: BoundingBox): boolean {\n    const { x, y, width, height } = this.boundary;\n    return !(\n      range.x > x + width ||\n      range.x + range.width < x ||\n      range.y > y + height ||\n      range.y + range.height < y\n    );\n  }\n\n  checkNearby(\n    x: number,\n    y: number,\n    range: number,\n    // pan: { x: number; y: number },\n    // zoom: number,\n  ) {\n    const bounds = {\n      x: x - range / 2,\n      y: y - range / 2,\n      width: range,\n      height: range,\n    };\n\n    const nearby = this.query(bounds, [], this.camera.pos, this.camera.zoom);\n\n    if (nearby.length > 0) {\n      const nearest = nearby[0];\n      return nearest;\n    }\n\n    return null;\n  }\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { nanoid } from 'nanoid';\nimport { Coords } from './Coords';\n\nexport class Camera {\n  uid: string;\n  pos: Coords;\n  zoom: number;\n\n  constructor() {\n    this.uid = nanoid();\n    this.pos = { x: 0, y: 0 };\n    this.zoom = 1;\n  }\n\n  toScreenCoords(worldCoords: Coords): Coords {\n    return {\n      x: (worldCoords.x - this.pos.x) * this.zoom,\n      y: (worldCoords.y - this.pos.y) * this.zoom,\n    };\n  }\n\n  toWorldCoords(screenCoords: Coords): Coords {\n    return {\n      x: screenCoords.x / this.zoom - this.pos.x,\n      y: screenCoords.y / this.zoom - this.pos.y,\n    };\n  }\n}\n","import { nanoid } from 'nanoid';\nimport { Rect } from './Rect';\nimport { Quadtree } from './Quadtree';\nimport { Camera } from './Camera';\nimport { Coords } from './Coords';\n\ntype EntityType = 'node' | 'connector' | 'connection' | 'viewport';\n\nexport class ViewContext {\n  static instances = new Map<string, ViewContext>();\n\n  uid: string;\n  nodes = new Map<string, HTMLLogicNodeElement>();\n  connectors = new Map<string, HTMLLogicConnectorElement>();\n  connections = new Map<string, HTMLLogicConnectionElement>();\n  connectorRects = <Record<string, Rect>>{};\n  connectorQuadtree: Quadtree;\n  camera = new Camera();\n  observer: MutationObserver;\n\n  // viewport variables\n  viewportEl: HTMLDivElement;\n  contentEl: HTMLDivElement;\n  gridEl: HTMLCanvasElement;\n  needsRedraw = true;\n  viewportRect: DOMRect;\n  initialPinchDistance = 0;\n  isPanning = false;\n  dragStart: Coords = { x: 0, y: 0 };\n  activeNode: HTMLLogicNodeElement;\n  activeNodeDragging = false;\n  activeNodeDragStart: Coords = { x: 0, y: 0 };\n  activeConnector: HTMLLogicConnectorElement;\n  activeConnectorStartPos: Coords = { x: 0, y: 0 };\n  activeConnection: HTMLLogicConnectionElement;\n\n  constructor(viewport: HTMLFlowyCanvasElement) {\n    const id = nanoid();\n    viewport.id = id;\n    const viewportId = id;\n    if (ViewContext.instances.has(viewportId)) {\n      return ViewContext.instances.get(viewportId);\n    }\n    this.uid = viewportId;\n    ViewContext.instances.set(this.uid, this);\n\n    ViewContext.initializeViewport(viewport);\n\n    this.observer = new MutationObserver(this.viewportMutation);\n    this.observer.observe(viewport, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  destroy() {\n    this.observer.disconnect();\n\n    ViewContext.instances.delete(this.uid);\n  }\n\n  static seekAndDestroy(type: EntityType, id: string) {\n    // search and destroy in all instances\n    for (const [, instance] of ViewContext.instances) {\n      switch (type) {\n        case 'node':\n          instance.unregisterNode(id);\n          break;\n        case 'connector':\n          instance.unregisterConnector(id);\n          break;\n        case 'connection':\n          instance.unregisterConnection(id);\n          break;\n        case 'viewport':\n          instance.destroy();\n          break;\n      }\n    }\n  }\n\n  registerNode(node: HTMLLogicNodeElement) {\n    const id = nanoid();\n    node.id = id;\n    this.nodes.set(id, node);\n    return id;\n  }\n\n  unregisterNode(id: string) {\n    // remove all connections and connectors associated with the node\n    // get connectors\n    const node = this.nodes.get(id);\n    if (node) {\n      // TODO: not sure if this is necessary with mutation observer\n\n      // const connectors = node.querySelectorAll('logic-connector');\n      // connectors.forEach((connector: HTMLLogicConnectorElement) => {\n      //   const cid = connector.id;\n      //   // remove connections\n      //   connector.connections.forEach(\n      //     (connection: HTMLLogicConnectionElement) => {\n      //       const id = connection.id;\n      //       if (id) this.unregisterConnection(id);\n      //     },\n      //   );\n      //   // remove connector\n      //   this.unregisterConnector(cid);\n      // });\n\n      // remove from nodes\n      this.nodes.delete(id);\n    }\n  }\n\n  registerConnector(connector: HTMLLogicConnectorElement) {\n    const id = nanoid();\n    connector.id = id;\n    this.connectors.set(id, connector);\n    const connectorEl = connector.querySelector('.connector');\n    const rect = connectorEl.getBoundingClientRect();\n    this.connectorRects[id] = {\n      left: rect.x,\n      top: rect.y,\n      width: rect.width,\n      height: rect.height,\n    };\n\n    return id;\n  }\n\n  unregisterConnector(id: string) {\n    this.connectors.delete(id);\n    delete this.connectorRects[id];\n  }\n\n  registerConnection(connection: HTMLLogicConnectionElement) {\n    const id = nanoid();\n    connection.id = id;\n    this.connections.set(id, connection);\n    return id;\n  }\n\n  unregisterConnection(id: string) {\n    // remove from dom\n    const el = document.getElementById(id);\n    if (el) {\n      el.remove();\n    }\n    this.connections.delete(id);\n  }\n\n  // mutation observer callback\n  // when elements are added or removed from the dom\n  // we need to register or unregister them if they are nodes, connectors or connections\n  viewportMutation(mutations: MutationRecord[]) {\n    if (!mutations.length) return;\n    // happens whenu using bringNodeToFront\n    // - stop the observer from firing\n    if (!this.registerNode) return;\n\n    mutations.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        for (let i = 0; i < mutation.addedNodes.length; i++) {\n          const node = mutation.addedNodes[i];\n          if (node instanceof HTMLElement) {\n            if (node.tagName === 'LOGIC-NODE') {\n              const logicNode = node as HTMLLogicNodeElement;\n              this.registerNode(logicNode);\n            } else if (node.tagName === 'LOGIC-CONNECTOR') {\n              const logicConnector = node as HTMLLogicConnectorElement;\n              this.registerConnector(logicConnector);\n            } else if (node.tagName === 'LOGIC-CONNECTION') {\n              const logicConnection = node as HTMLLogicConnectionElement;\n              this.registerConnection(logicConnection);\n            }\n          }\n        }\n\n        for (let i = 0; i < mutation.removedNodes.length; i++) {\n          const node = mutation.removedNodes[i];\n          if (node instanceof HTMLElement) {\n            if (node.tagName === 'LOGIC-NODE') {\n              const logicNode = node as HTMLLogicNodeElement;\n              this.unregisterNode(logicNode.getAttribute('id'));\n            } else if (node.tagName === 'LOGIC-CONNECTOR') {\n              const logicConnector = node as HTMLLogicConnectorElement;\n              this.unregisterConnector(logicConnector.getAttribute('id'));\n            } else if (node.tagName === 'LOGIC-CONNECTION') {\n              const logicConnection = node as HTMLLogicConnectionElement;\n              this.unregisterConnection(logicConnection.getAttribute('id'));\n            }\n          }\n        }\n      }\n    });\n  }\n\n  static initializeViewport(viewport: HTMLFlowyCanvasElement) {\n    // need to register all nodes, connectors and connections\n    // that are already in the dom\n\n    const id = viewport.id;\n    const instance = ViewContext.instances.get(id);\n\n    const contentEl = viewport.querySelector('.flowy-content');\n    const children = contentEl.children;\n\n    const traverse = (el: HTMLElement) => {\n      if (el.tagName === 'LOGIC-NODE') {\n        const logicNode = el as HTMLLogicNodeElement;\n        instance.registerNode(logicNode);\n      } else if (el.tagName === 'LOGIC-CONNECTOR') {\n        const logicConnector = el as HTMLLogicConnectorElement;\n        instance.registerConnector(logicConnector);\n      } else if (el.tagName === 'LOGIC-CONNECTION') {\n        const logicConnection = el as HTMLLogicConnectionElement;\n        instance.registerConnection(logicConnection);\n      }\n\n      const children = el.children;\n      for (let i = 0; i < children.length; i++) {\n        traverse(children[i] as HTMLElement);\n      }\n    };\n\n    for (let i = 0; i < children.length; i++) {\n      traverse(children[i] as HTMLElement);\n    }\n  }\n\n  static bringToFront(node: HTMLElement) {\n    node.parentElement?.appendChild(node);\n  }\n\n  static setCursor(cursor: string) {\n    document.body.style.cursor = cursor;\n  }\n\n  static resetCursor() {\n    document.body.style.cursor = 'default';\n  }\n\n  getRectCenter(rect: DOMRect | Rect) {\n    return {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n    };\n  }\n\n  startPanning(worldCoords: Coords, cursor = 'grabbing') {\n    ViewContext.setCursor(cursor);\n    this.isPanning = true;\n    this.dragStart = worldCoords;\n  }\n\n  panCamera(loc: Coords) {\n    this.camera.pos = {\n      x: loc.x / this.camera.zoom - this.dragStart.x,\n      y: loc.y / this.camera.zoom - this.dragStart.y,\n    };\n  }\n\n  resetPointerStates() {\n    this.isPanning = false;\n    this.initialPinchDistance = 0;\n    ViewContext.resetCursor();\n  }\n\n  startNodeDrag(\n    target: HTMLLogicNodeElement,\n    worldCoords: Coords,\n    cursor = 'grabbing',\n  ): boolean {\n    const node = target.closest('logic-node') as HTMLLogicNodeElement;\n    if (!node) return false;\n\n    ViewContext.setCursor(cursor);\n    this.activeNode = node;\n    ViewContext.bringToFront(node);\n\n    const pos = this.activeNode.position;\n    this.activeNodeDragging = true;\n    this.activeNodeDragStart = {\n      x: worldCoords.x - pos.x,\n      y: worldCoords.y - pos.y,\n    };\n\n    return true;\n  }\n\n  updateNodeConnectorPos(aNode: HTMLLogicNodeElement, delta: Coords) {\n    const connectors = aNode.querySelectorAll(\n      'logic-connector',\n    ) as NodeListOf<HTMLLogicConnectorElement>;\n\n    for (let i = 0; i < connectors.length; i++) {\n      const connector = connectors[i];\n      const rect = { ...this.connectorRects[connector.id] };\n      rect.left += delta.x;\n      rect.top += delta.y;\n      this.connectorRects[connector.id] = rect;\n\n      this.updateNodeConnectorConnectionsPos(connector, rect);\n    }\n  }\n\n  updateNodeConnectorConnectionsPos(\n    connector: HTMLLogicConnectorElement,\n    rect: Rect,\n  ) {\n    if (connector.connections.length) {\n      const pos = this.getRectCenter(rect);\n\n      for (let i = 0; i < connector.connections.length; i++) {\n        const connection = connector.connections[i];\n        if (connector.type === 'input') {\n          connection.end = pos;\n        } else {\n          connection.start = pos;\n        }\n      }\n    }\n  }\n\n  snapToGrid(pos: Coords, gridSize: number) {\n    return {\n      x: Math.round(pos.x / gridSize) * gridSize,\n      y: Math.round(pos.y / gridSize) * gridSize,\n    };\n  }\n\n  calcNodePos(worldCoords: Coords) {\n    const pos = {\n      x: worldCoords.x - this.activeNodeDragStart.x,\n      y: worldCoords.y - this.activeNodeDragStart.y,\n    };\n\n    return this.snapToGrid(pos, 10);\n  }\n\n  moveNode(loc: Coords, gridSize: number) {\n    const aNode = this.activeNode;\n    const worldCoords = this.camera.toWorldCoords(loc);\n    const oldPos = aNode.position;\n\n    let newPos = this.calcNodePos(worldCoords);\n\n    // calc new position\n    if (this.snapToGrid) {\n      newPos = this.snapToGrid(newPos, gridSize);\n    }\n\n    const delta = {\n      x: newPos.x - oldPos.x,\n      y: newPos.y - oldPos.y,\n    };\n\n    // update node position and it's connections\n    this.updateNodeConnectorPos(aNode, delta); // ???\n\n    aNode.position = newPos;\n  }\n\n  endNodeDrag() {\n    this.activeNodeDragging = false;\n    this.updateNodeConnectorsQuadtree(this.activeNode);\n    this.activeNode = null;\n  }\n\n  createNewConnection(startPos: Coords, type: 'input' | 'output') {\n    const connection = document.createElement(\n      'logic-connection',\n    ) as HTMLLogicConnectionElement;\n    connection.start = startPos;\n    connection.end = startPos;\n    connection.type = type;\n\n    this.activeConnection = connection;\n    this.contentEl.appendChild(connection);\n  }\n\n  moveActiveConnection(loc: Coords, snappingDist: number) {\n    const aConn = this.activeConnection;\n    const worldCoords = this.camera.toWorldCoords(loc);\n\n    const snappableConnector = this.connectorQuadtree.checkNearby(\n      loc.x,\n      loc.y,\n      snappingDist * this.camera.zoom,\n    );\n\n    if (snappableConnector) {\n      const rect = this.connectorRects[snappableConnector.id];\n      aConn.end = this.getRectCenter(rect);\n    } else {\n      aConn.end = worldCoords;\n    }\n  }\n\n  getTargetConnector(target: HTMLElement, loc: Coords, snappingDist: number) {\n    let targetConnector = target.closest(\n      'logic-connector .connector',\n    ) as HTMLLogicConnectorElement;\n\n    const snappedConnector = this.connectorQuadtree.checkNearby(\n      loc.x,\n      loc.y,\n      snappingDist * this.camera.zoom,\n    );\n\n    if (snappedConnector) {\n      targetConnector = this.connectors.get(snappedConnector.id);\n    }\n\n    return targetConnector;\n  }\n\n  startNewConnection(target: HTMLLogicConnectorElement, cursor = 'grabbing') {\n    const connEl = target.closest(\n      'logic-connector .connector',\n    ) as HTMLLogicConnectorElement;\n    if (!connEl) return false;\n\n    ViewContext.setCursor(cursor);\n    this.activeConnector = connEl;\n\n    const parentConn = connEl.closest(\n      'logic-connector',\n    ) as HTMLLogicConnectorElement;\n    const rect = this.connectorRects[parentConn.id];\n    const center = this.getRectCenter(rect);\n\n    this.createNewConnection(center, parentConn.type);\n\n    return true;\n  }\n\n  processConnection(target: HTMLLogicConnectorElement) {\n    const aConn = this.activeConnector.closest(\n      'logic-connector',\n    ) as HTMLLogicConnectorElement;\n    const tConn = target.closest(\n      'logic-connector',\n    ) as HTMLLogicConnectorElement;\n\n    // find parent nodes\n    const aNode = aConn.closest('logic-node') as HTMLLogicNodeElement;\n    const tNode = tConn.closest('logic-node') as HTMLLogicNodeElement;\n\n    // validate connection\n    if (!this.isValidConnection(aConn, tConn, aNode, tNode, target)) {\n      this.activeConnection.remove();\n      return;\n    }\n\n    this.updateConnectionEndpoints(aConn, tConn);\n    this.finalizeConnection(aConn, tConn);\n  }\n\n  isValidConnection(\n    aConn: HTMLLogicConnectorElement,\n    tConn: HTMLLogicConnectorElement,\n    aNode: HTMLLogicNodeElement,\n    tNode: HTMLLogicNodeElement,\n    targetConn: HTMLLogicConnectorElement,\n  ) {\n    // avoid connecting to self or already connected\n    if (\n      this.activeConnector.connectingConnector === tConn ||\n      tConn.connectingConnector === aConn\n    ) {\n      // perhaps send an error event\n      // console.log('already connected');\n      return false;\n    }\n\n    if (aNode === tNode || this.activeConnector === targetConn) {\n      // connecting to self\n      return false;\n    }\n\n    // ensure is between input/output not same type\n    if (aConn.type === tConn.type) {\n      // console.log('same type');\n      return false;\n    }\n\n    return true;\n  }\n\n  updateConnectionEndpoints(\n    active: HTMLLogicConnectorElement,\n    target: HTMLLogicConnectorElement,\n  ) {\n    const targRect = this.connectorRects[target.id];\n\n    if (active.type === 'input') {\n      // swap start and end connections\n      this.activeConnection.start = this.getRectCenter(targRect);\n      this.activeConnection.end = this.activeConnectorStartPos;\n      this.activeConnection.type = 'output';\n\n      const rect = this.connectorRects[active.id];\n      this.activeConnection.end = this.getRectCenter(rect);\n    } else {\n      this.activeConnection.end = this.getRectCenter(targRect);\n    }\n  }\n\n  finalizeConnection(\n    active: HTMLLogicConnectorElement,\n    target: HTMLLogicConnectorElement,\n  ) {\n    active.connectingConnector = target;\n    active.connections.push(this.activeConnection);\n    target.connectingConnector = active;\n    target.connections.push(this.activeConnection);\n  }\n\n  startDisconnectConnection(\n    target: HTMLLogicConnectionElement,\n    loc: Coords,\n    snappingDist: number,\n    cursor = 'grabbing',\n  ) {\n    const connection = target.closest(\n      'logic-connection',\n    ) as HTMLLogicConnectionElement;\n    if (!connection) return false;\n\n    ViewContext.bringToFront(connection);\n\n    const snappableConnector = this.connectorQuadtree.checkNearby(\n      loc.x,\n      loc.y,\n      snappingDist * this.camera.zoom,\n    );\n\n    if (!snappableConnector) return false;\n\n    ViewContext.setCursor(cursor);\n    this.activeConnection = connection;\n\n    const snapConnector = this.connectors.get(snappableConnector.id);\n    this.activeConnector =\n      snapConnector.connectingConnector as HTMLLogicConnectorElement;\n\n    this.disconnectConnector(\n      this.activeConnection,\n      this.activeConnector,\n      snapConnector,\n    );\n\n    // handle type specific logic\n    if (this.activeConnector.type === 'input') {\n      this.swapConnectionEndpoints(this.activeConnection);\n      this.activeConnection.type = 'input';\n    }\n\n    return true;\n  }\n\n  disconnectConnector(\n    connection: HTMLLogicConnectionElement,\n    connector: HTMLLogicConnectorElement,\n    snapConnector: HTMLLogicConnectorElement,\n  ) {\n    connector.connections = connector.connections.filter(c => c !== connection);\n    snapConnector.connections = snapConnector.connections.filter(\n      c => c !== connection,\n    );\n\n    connector.connectingConnector = null;\n    snapConnector.connectingConnector = null;\n  }\n\n  swapConnectionEndpoints(connection: HTMLLogicConnectionElement) {\n    const { start, end } = connection;\n    connection.start = end;\n    connection.end = start;\n  }\n\n  updateNodeConnectorsQuadtree(node: HTMLLogicNodeElement) {\n    const connectors = node.querySelectorAll(\n      'logic-connector',\n    ) as NodeListOf<HTMLLogicConnectorElement>;\n    for (let i = 0; i < connectors.length; i++) {\n      const connector = connectors[i];\n      const rect = this.connectorRects[connector.id];\n\n      this.connectorQuadtree.remove(connector.id);\n      this.connectorQuadtree.insert({\n        id: connector.id,\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2,\n      });\n    }\n  }\n}\n","import { Camera } from '../types/Camera';\n\nexport const renderCanvasGrid = (\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  gridSize: number,\n  color: string,\n  bgColor: string,\n  camera: Camera,\n) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n\n  let step = gridSize * camera.zoom;\n\n  // if the step is too small because of zoom, increase it by a factor of 10\n  if (step < 10) {\n    step *= 2;\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  canvas.width = width * dpr;\n  canvas.height = height * dpr;\n  ctx.scale(dpr, dpr);\n\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 1;\n\n  //clear\n  ctx.fillStyle = bgColor;\n  ctx.fillRect(0, 0, width, height);\n\n  const offsetX = (-camera.pos.x % gridSize) * camera.zoom;\n  const offsetY = (-camera.pos.y % gridSize) * camera.zoom;\n\n  ctx.beginPath();\n\n  for (let x = -offsetX; x < width; x += step) {\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, height);\n  }\n\n  for (let y = -offsetY; y < height; y += step) {\n    ctx.moveTo(0, y);\n    ctx.lineTo(width, y);\n  }\n\n  ctx.stroke();\n};\n\nexport const renderCanvasDotGrid = (\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  gridSize: number,\n  color: string,\n  bgColor: string,\n  camera: Camera,\n) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n\n  let step = gridSize * camera.zoom;\n\n  // if the step is too small because of zoom, increase it by a factor of 10\n  if (step < 10) {\n    step *= 2;\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  canvas.width = width * dpr;\n  canvas.height = height * dpr;\n  ctx.scale(dpr, dpr);\n\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 1;\n\n  //clear\n  ctx.fillStyle = bgColor;\n  ctx.fillRect(0, 0, width, height);\n\n  const offsetX = (-camera.pos.x % gridSize) * camera.zoom;\n  const offsetY = (-camera.pos.y % gridSize) * camera.zoom;\n\n  ctx.beginPath();\n\n  // for (let x = -offsetX; x < width; x += step) {\n  //   for (let y = -offsetY; y < height; y += step) {\n  //     ctx.moveTo(x, y);\n  //     ctx.arc(x, y, 1, 0, 2 * Math.PI);\n  //   }\n  // }\n\n  // more performant version - no nested loop\n  for (let x = -offsetX; x < width; x += step) {\n    for (let y = -offsetY; y < height; y += step) {\n      ctx.fillRect(x - 2, y - 2, 2, 2);\n    }\n  }\n\n  ctx.stroke();\n};\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { debounce } from '../../utils/debounce';\nimport { throttle } from '../../utils/throttle';\nimport { getEventLocation } from '../../utils/getEventLocation';\nimport { Quadtree } from '../../types/Quadtree';\nimport { ViewContext } from '../../types/ViewContext';\nimport {\n  renderCanvasDotGrid,\n  renderCanvasGrid,\n} from '../../utils/renderCanvasGrid';\n\n@Component({\n  tag: 'flowy-canvas',\n  styleUrl: 'flowy-canvas.css',\n  shadow: false,\n})\nexport class FlowyCanvas {\n  @Element() el: HTMLFlowyCanvasElement;\n\n  @Prop() showGrid: boolean = true;\n  @Prop() showDotGrid: boolean = false;\n  @Prop() gridSize: number = 20;\n  @Prop() gridBgColor: string = '#f7f7f7';\n  @Prop() gridLineColor: string = '#555555';\n  @Prop() maxZoom: number = 3;\n  @Prop() minZoom: number = 0.2;\n  @Prop() zoomSpeed: number = 0.08;\n  @Prop() snapToGrid: boolean = false;\n  @Prop() connectorSnappingDistance: number = 37;\n  @Prop() cursors: Record<string, string> = {\n    default: 'auto',\n    panning: 'grabbing',\n    moving: 'grabbing',\n  };\n\n  ctx: ViewContext;\n\n  resizeObserver: ResizeObserver;\n  debouncedResize = debounce(() => this.onResize(), 16);\n  debouncedUpdateScreen = debounce(() => this.updateScreen(), 1);\n  throttledTouchMove = throttle(e => this.handleTouchMove(e), 1);\n  forceContentReflowDebounced = debounce(() => this.forceContentReflow(), 30);\n\n  elMouseDown = (e: MouseEvent | TouchEvent) => this.onPointerDown(e);\n  elMouseUp = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n  elMouseMove = (e: MouseEvent | TouchEvent) => this.onPointerMove(e);\n\n  elTouchStart = (e: TouchEvent) => this.handleTouchStart(e);\n  elTouchMove = (e: TouchEvent) => this.throttledTouchMove(e);\n  elTouchEnd = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n\n  elWheel = (e: WheelEvent) => this.handleWheel(e);\n\n  componentDidLoad() {\n    this.ctx = new ViewContext(this.el);\n    // this.ctx.camera = this.ctx.camera;\n\n    this.ctx.viewportEl = this.el.querySelector(\n      '.flowy-canvas',\n    ) as HTMLDivElement;\n    this.ctx.contentEl = this.el.querySelector(\n      '.flowy-content',\n    ) as HTMLDivElement;\n    this.ctx.gridEl = this.el.querySelector('.flowy-grid') as HTMLCanvasElement;\n    this.ctx.viewportRect = this.ctx.viewportEl.getBoundingClientRect();\n    this.ctx.initialPinchDistance = 0;\n\n    const canvasEl = this.ctx.viewportEl;\n\n    // setup event listeners\n    window.addEventListener('mousedown', this.elMouseDown, {\n      passive: true,\n    });\n    canvasEl.addEventListener('mouseup', this.elMouseUp, { passive: true });\n    canvasEl.addEventListener('mousemove', this.elMouseMove, {\n      passive: true,\n    });\n\n    canvasEl.addEventListener('touchstart', this.elTouchStart, {\n      passive: true,\n    });\n    canvasEl.addEventListener('touchmove', this.elTouchMove, {\n      passive: true,\n    });\n    canvasEl.addEventListener('touchend', this.elTouchEnd, { passive: true });\n\n    canvasEl.addEventListener('wheel', this.elWheel, { passive: false });\n\n    //create quadtree\n    const boundary = {\n      x: 0,\n      y: 0,\n      width: this.ctx.viewportRect.width,\n      height: this.ctx.viewportRect.height,\n    };\n\n    this.ctx.connectorQuadtree = new Quadtree(boundary, 4, this.ctx.camera);\n    this.ctx.connectorQuadtree = this.ctx.connectorQuadtree;\n\n    // Handle resize events\n    this.resizeObserver = new ResizeObserver(() => this.debouncedResize());\n    this.resizeObserver.observe(this.ctx.viewportEl);\n\n    this.renderGrid();\n  }\n\n  disconnectedCallback() {\n    // Clean up resize observer\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Clean up event listeners\n    const canvasEl = this.ctx.viewportEl;\n    window.removeEventListener('mousedown', this.elMouseDown);\n    canvasEl.removeEventListener('mouseup', this.elMouseUp);\n    canvasEl.removeEventListener('mousemove', this.elMouseMove);\n\n    canvasEl.removeEventListener('touchstart', this.elTouchStart);\n    canvasEl.removeEventListener('touchmove', this.elTouchMove);\n    canvasEl.removeEventListener('touchend', this.elTouchEnd);\n\n    canvasEl.removeEventListener('wheel', this.elWheel);\n\n    this.ctx.destroy();\n  }\n\n  scheduleComponentUpdate() {\n    this.ctx.needsRedraw = true;\n    this.debouncedUpdateScreen();\n  }\n\n  onResize() {\n    this.ctx.needsRedraw = true;\n    this.ctx.viewportRect = this.ctx.viewportEl.getBoundingClientRect();\n    this.renderGrid();\n    // update quadtree boundary\n    const boundary = {\n      x: 0,\n      y: 0,\n      width: this.ctx.viewportRect.width,\n      height: this.ctx.viewportRect.height,\n    };\n    this.ctx.connectorQuadtree.boundary = boundary;\n  }\n\n  renderGrid() {\n    if ((!this.showGrid && !this.showDotGrid) || !this.ctx.needsRedraw) return;\n\n    requestAnimationFrame(() => {\n      if (this.showGrid) {\n        renderCanvasGrid(\n          this.ctx.gridEl,\n          this.ctx.viewportRect.width,\n          this.ctx.viewportRect.height,\n          this.gridSize,\n          this.gridLineColor,\n          this.gridBgColor,\n          this.ctx.camera,\n        );\n      }\n\n      if (this.showDotGrid) {\n        renderCanvasDotGrid(\n          this.ctx.gridEl,\n          this.ctx.viewportRect.width,\n          this.ctx.viewportRect.height,\n          this.gridSize,\n          this.gridLineColor,\n          this.gridBgColor,\n          this.ctx.camera,\n        );\n      }\n    });\n\n    this.ctx.needsRedraw = false;\n  }\n\n  updateScreen() {\n    requestAnimationFrame(() => {\n      const contentEl = this.ctx.contentEl;\n      // Apply transformations to the content, aligning with the grid\n      contentEl.style.transform = `perspective(1px) scale(${this.ctx.camera.zoom}) translate(${this.ctx.camera.pos.x}px, ${this.ctx.camera.pos.y}px)`;\n      this.renderGrid();\n    });\n  }\n\n  onPointerDown(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n    const worldCoords = this.ctx.camera.toWorldCoords(loc);\n    const target = document.elementFromPoint(loc.x, loc.y) as HTMLElement;\n\n    // if a connection clicked\n    if (\n      this.ctx.startDisconnectConnection(\n        target as HTMLLogicConnectionElement,\n        loc,\n        this.connectorSnappingDistance,\n        this.cursors.moving,\n      )\n    )\n      return;\n\n    // if a connector clicked\n    if (this.ctx.startNewConnection(target as HTMLLogicConnectorElement))\n      return;\n\n    // if a node clicked\n    if (this.ctx.startNodeDrag(target as HTMLLogicNodeElement, worldCoords))\n      return;\n\n    // if nothing clicked, then start panning\n    this.ctx.startPanning(worldCoords);\n  }\n\n  onPointerUp(event: MouseEvent | TouchEvent) {\n    if (this.ctx.activeConnector && this.ctx.activeConnection) {\n      this.onEndActiveConnection(event);\n    } else if (this.ctx.activeNode && this.ctx.activeNodeDragging) {\n      this.ctx.endNodeDrag();\n    }\n\n    this.ctx.resetPointerStates();\n  }\n\n  onEndActiveConnection(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n    let target = event.target as HTMLElement;\n\n    // For touch events, get the element at the touch point\n    if (event instanceof TouchEvent) {\n      target = document.elementFromPoint(loc.x, loc.y) as HTMLElement;\n    }\n\n    let targetConnector = this.ctx.getTargetConnector(\n      target,\n      loc,\n      this.connectorSnappingDistance,\n    );\n\n    if (targetConnector) {\n      this.ctx.processConnection(targetConnector);\n    } else {\n      this.ctx.activeConnection.remove();\n    }\n\n    // clear active states\n    this.ctx.activeConnector = null;\n    this.ctx.activeConnection = null;\n  }\n\n  onPointerMove(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n\n    if (this.ctx.activeConnector && this.ctx.activeConnection) {\n      this.ctx.moveActiveConnection(loc, this.connectorSnappingDistance);\n    } else if (this.ctx.activeNode && this.ctx.activeNodeDragging) {\n      this.ctx.moveNode(loc, this.gridSize);\n    } else if (this.ctx.isPanning) {\n      this.ctx.panCamera(loc);\n      this.scheduleComponentUpdate();\n    }\n  }\n\n  handleWheel(event: WheelEvent) {\n    event.preventDefault();\n\n    const canvasRect = this.ctx.viewportRect;\n    const mouseX = event.clientX - canvasRect.left;\n    const mouseY = event.clientY - canvasRect.top;\n\n    // Calculate the zoom level change\n    const zoomDelta = event.deltaY < 0 ? this.zoomSpeed : -this.zoomSpeed;\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.ctx.camera.zoom + zoomDelta),\n    );\n\n    // Calculate the scale factor\n    const scaleFactor = newZoom / this.ctx.camera.zoom;\n\n    // Adjust the pan position to keep the same point under the cursor\n    const newPanX =\n      mouseX -\n      (mouseX - this.ctx.camera.pos.x * this.ctx.camera.zoom) * scaleFactor;\n    const newPanY =\n      mouseY -\n      (mouseY - this.ctx.camera.pos.y * this.ctx.camera.zoom) * scaleFactor;\n\n    // Update pan and zoom\n    this.ctx.camera.pos = { x: newPanX / newZoom, y: newPanY / newZoom };\n    // this.lastZoom = this.ctx.camera.zoom;\n    this.ctx.camera.zoom = newZoom;\n\n    // if zooming in, force a reflow to prevent blurry text\n    if (zoomDelta > 0) {\n      this.forceContentReflowDebounced();\n    }\n\n    // this.ctx.needsRedraw = true;\n    this.scheduleComponentUpdate();\n  }\n\n  handleTouchStart(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> start panning\n      this.onPointerDown(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> start pinch zoom\n      this.ctx.initialPinchDistance = 0; // Reset initial pinch distance\n      this.handlePinch(event); // Start pinch gesture\n    }\n  }\n\n  handleTouchMove(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> panning\n      this.onPointerMove(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> pinch zooming\n      this.handlePinch(event);\n    }\n  }\n\n  handlePinch(event: TouchEvent) {\n    if (event.touches.length !== 2) return;\n\n    // handle panning while pinching\n    this.onPointerMove(event);\n\n    event.preventDefault(); // Prevent default behavior like scrolling\n\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n\n    // Calculate the distance between the two touch points (pinch)\n    const distance = Math.sqrt(\n      (touch1.clientX - touch2.clientX) ** 2 +\n        (touch1.clientY - touch2.clientY) ** 2,\n    );\n\n    if (this.ctx.initialPinchDistance === 0) {\n      // If it's the start of the pinch, initialize the pinch distance\n      this.ctx.initialPinchDistance = distance;\n    } else {\n      // Calculate the scale factor based on the distance change\n      const scaleFactor = distance / this.ctx.initialPinchDistance;\n\n      // Calculate the midpoint between the two fingers (the pinch center)\n      const pinchCenterX = (touch1.clientX + touch2.clientX) / 2;\n      const pinchCenterY = (touch1.clientY + touch2.clientY) / 2;\n\n      // Apply zoom and keep the pinch center fixed\n      this.adjustZoomOnPinch(scaleFactor, pinchCenterX, pinchCenterY);\n\n      // Update the initial pinch distance for the next move\n      this.ctx.initialPinchDistance = distance;\n    }\n  }\n\n  adjustZoomOnPinch(\n    scaleFactor: number,\n    pinchCenterX: number,\n    pinchCenterY: number,\n  ) {\n    // Calculate new zoom, ensuring it stays within min/max bounds\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.ctx.camera.zoom * scaleFactor),\n    );\n\n    // Find the pinch center position relative to the content's current position and zoom\n    const pinchContentX =\n      (pinchCenterX - this.ctx.camera.pos.x * this.ctx.camera.zoom) /\n      this.ctx.camera.zoom;\n    const pinchContentY =\n      (pinchCenterY - this.ctx.camera.pos.y * this.ctx.camera.zoom) /\n      this.ctx.camera.zoom;\n\n    // Adjust pan so the pinch center stays fixed after zooming\n    this.ctx.camera.pos = {\n      x: pinchCenterX / newZoom - pinchContentX,\n      y: pinchCenterY / newZoom - pinchContentY,\n    };\n\n    // Apply the new zoom level\n    this.ctx.camera.zoom = newZoom;\n\n    // Trigger a screen redraw\n    this.debouncedUpdateScreen();\n  }\n\n  forceContentReflow() {\n    // force repaint the content\n    const cdisplay = this.ctx.contentEl.style.display;\n    this.ctx.contentEl.style.display = 'none';\n    this.ctx.contentEl.offsetHeight; // trigger reflow\n    this.ctx.contentEl.style.display = cdisplay;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"flowy-canvas\">\n          <canvas class=\"flowy-grid\"></canvas>\n          <div class=\"flowy-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
{"file":"flowy-canvas.entry.esm.js","mappings":"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","names":["scopedUrlAlphabet"],"sources":["src/utils/throttle.ts","src/utils/getEventLocation.ts","src/types/Quadtree.ts","node_modules/nanoid/url-alphabet/index.js","node_modules/nanoid/index.browser.js","src/types/Camera.ts","src/types/ViewContext.ts","src/utils/renderCanvasGrid.ts","src/components/flowy-canvas/flowy-canvas.css?tag=flowy-canvas","src/components/flowy-canvas/flowy-canvas.tsx"],"sourcesContent":["export const throttle = (fn: (...args: any[]) => void, delay: number) => {\n  let lastFunc: ReturnType<typeof setTimeout>;\n  let lastRan: number;\n  return (...args: any[]) => {\n    if (!lastRan) {\n      fn(...args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(() => {\n        if (Date.now() - lastRan >= delay) {\n          fn(...args);\n          lastRan = Date.now();\n        }\n      }, delay - (Date.now() - lastRan));\n    }\n  };\n};\n","export const getEventLocation = (e: MouseEvent | TouchEvent) => {\n  if (e instanceof MouseEvent) {\n    return { x: e.clientX, y: e.clientY };\n  } else if (e instanceof TouchEvent && e.touches.length > 0) {\n    return { x: e.touches[0].clientX, y: e.touches[0].clientY };\n  } else if (e instanceof TouchEvent && e.changedTouches.length > 0) {\n    return { x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY };\n  }\n  return { x: 0, y: 0 };\n};\n","import { Camera } from './Camera';\n\ninterface Point {\n  x: number;\n  y: number;\n  id: string; // Unique ID of the connector\n}\n\ninterface BoundingBox {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport class Quadtree {\n  boundary: BoundingBox;\n  capacity: number;\n  points: Point[];\n  divided: boolean;\n  northeast: Quadtree | null;\n  northwest: Quadtree | null;\n  southeast: Quadtree | null;\n  southwest: Quadtree | null;\n  camera: Camera;\n\n  constructor(boundary: BoundingBox, capacity: number, camera: Camera) {\n    this.boundary = boundary;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n    this.northeast = null;\n    this.northwest = null;\n    this.southeast = null;\n    this.southwest = null;\n    this.camera = camera;\n  }\n\n  subdivide() {\n    const { x, y, width, height } = this.boundary;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    this.northeast = new Quadtree(\n      { x: x + halfWidth, y: y, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n    this.northwest = new Quadtree(\n      { x: x, y: y, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n    this.southeast = new Quadtree(\n      {\n        x: x + halfWidth,\n        y: y + halfHeight,\n        width: halfWidth,\n        height: halfHeight,\n      },\n      this.capacity,\n      this.camera,\n    );\n    this.southwest = new Quadtree(\n      { x: x, y: y + halfHeight, width: halfWidth, height: halfHeight },\n      this.capacity,\n      this.camera,\n    );\n\n    this.divided = true;\n  }\n\n  insert(point: Point): boolean {\n    if (!this.contains(point)) return false;\n\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    } else {\n      if (!this.divided) this.subdivide();\n\n      return (\n        this.northeast!.insert(point) ||\n        this.northwest!.insert(point) ||\n        this.southeast!.insert(point) ||\n        this.southwest!.insert(point)\n      );\n    }\n  }\n\n  insertItems(points: Point[]): void {\n    for (let point of points) {\n      this.insert(point);\n    }\n  }\n\n  remove(id: string): boolean {\n    const removeFromNode = (node: Quadtree | null): boolean => {\n      if (node === null) return false;\n\n      // Remove points from the node\n      node.points = node.points.filter(point => point.id !== id);\n\n      // Recursively remove from child nodes\n      const removed =\n        removeFromNode(node.northwest) ||\n        removeFromNode(node.northeast) ||\n        removeFromNode(node.southwest) ||\n        removeFromNode(node.southeast);\n\n      // If no points in the node and no children have points, remove the node\n      if (node.points.length === 0 && !node.divided) {\n        node.northwest =\n          node.northeast =\n          node.southwest =\n          node.southeast =\n            null;\n      }\n\n      return removed;\n    };\n\n    return removeFromNode(this);\n  }\n\n  removeItems(ids: string[]): void {\n    for (let id of ids) {\n      this.remove(id);\n    }\n  }\n\n  contains(point: Point): boolean {\n    const { x, y, width, height } = this.boundary;\n    return (\n      point.x >= x &&\n      point.x < x + width &&\n      point.y >= y &&\n      point.y < y + height\n    );\n  }\n\n  query(\n    range: BoundingBox,\n    found: Point[] = [],\n    pan: { x: number; y: number },\n    zoom: number,\n  ): Point[] {\n    if (!this.intersects(range)) return found;\n\n    for (let point of this.points) {\n      if (this.inRange(point, range, pan, zoom)) {\n        found.push(point);\n      }\n    }\n\n    if (this.divided) {\n      this.northwest!.query(range, found, pan, zoom);\n      this.northeast!.query(range, found, pan, zoom);\n      this.southwest!.query(range, found, pan, zoom);\n      this.southeast!.query(range, found, pan, zoom);\n    }\n\n    return found;\n  }\n\n  inRange(\n    point: Point,\n    range: BoundingBox,\n    pan: { x: number; y: number },\n    zoom: number,\n  ): boolean {\n    // Adjust the point position relative to pan and zoom\n    const adjPoint = {\n      x: (point.x + pan.x) * zoom,\n      y: (point.y + pan.y) * zoom,\n    };\n\n    // Check if the adjusted point is within the adjusted range\n    return (\n      adjPoint.x >= range.x &&\n      adjPoint.x < range.x + range.width &&\n      adjPoint.y >= range.y &&\n      adjPoint.y < range.y + range.height\n    );\n  }\n\n  intersects(range: BoundingBox): boolean {\n    const { x, y, width, height } = this.boundary;\n    return !(\n      range.x > x + width ||\n      range.x + range.width < x ||\n      range.y > y + height ||\n      range.y + range.height < y\n    );\n  }\n\n  checkNearby(\n    x: number,\n    y: number,\n    range: number,\n    // pan: { x: number; y: number },\n    // zoom: number,\n  ) {\n    const bounds = {\n      x: x - range / 2,\n      y: y - range / 2,\n      width: range,\n      height: range,\n    };\n\n    const nearby = this.query(bounds, [], this.camera.pos, this.camera.zoom);\n\n    if (nearby.length > 0) {\n      const nearest = nearby[0];\n      return nearest;\n    }\n\n    return null;\n  }\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { nanoid } from 'nanoid';\nimport { Coords } from './Coords';\n\nexport class Camera {\n  uid: string;\n  pos: Coords;\n  zoom: number;\n\n  constructor() {\n    this.uid = nanoid();\n    this.pos = { x: 0, y: 0 };\n    this.zoom = 1;\n  }\n\n  toScreenCoords(worldCoords: Coords): Coords {\n    return {\n      x: (worldCoords.x - this.pos.x) * this.zoom,\n      y: (worldCoords.y - this.pos.y) * this.zoom,\n    };\n  }\n\n  toWorldCoords(screenCoords: Coords): Coords {\n    return {\n      x: screenCoords.x / this.zoom - this.pos.x,\n      y: screenCoords.y / this.zoom - this.pos.y,\n    };\n  }\n}\n","import { nanoid } from 'nanoid';\nimport { Rect } from './Rect';\nimport { Quadtree } from './Quadtree';\nimport { Camera } from './Camera';\n\ntype EntityType = 'node' | 'connector' | 'connection' | 'viewport';\n\nexport class ViewContext {\n  static instances = new Map<string, ViewContext>();\n\n  uid: string;\n  nodes = new Map<string, HTMLLogicNodeElement>();\n  connectors = new Map<string, HTMLLogicConnectorElement>();\n  connections = new Map<string, HTMLLogicConnectionElement>();\n  connectorRects = <Record<string, Rect>>{};\n  // connectionRefs = new Map<\n  //   string,\n  //   { start: HTMLLogicConnectorElement; end: HTMLLogicConnectorElement }\n  // >();\n  quadtree: Quadtree;\n  camera = new Camera();\n  observer: MutationObserver;\n\n  constructor(viewport: HTMLFlowyCanvasElement) {\n    const id = nanoid();\n    viewport.id = id;\n    const viewportId = id;\n    if (ViewContext.instances.has(viewportId)) {\n      return ViewContext.instances.get(viewportId);\n    }\n    this.uid = viewportId;\n    ViewContext.instances.set(this.uid, this);\n\n    ViewContext.initializeViewport(viewport);\n\n    this.observer = new MutationObserver(this.viewportMutation);\n    this.observer.observe(viewport, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  destroy() {\n    this.observer.disconnect();\n\n    ViewContext.instances.delete(this.uid);\n  }\n\n  static seekAndDestroy = (type: EntityType, id: string) => {\n    // search and destroy in all instances\n    for (const [, instance] of ViewContext.instances) {\n      switch (type) {\n        case 'node':\n          instance.unregisterNode(id);\n          break;\n        case 'connector':\n          instance.unregisterConnector(id);\n          break;\n        case 'connection':\n          instance.unregisterConnection(id);\n          break;\n        case 'viewport':\n          instance.destroy();\n          break;\n      }\n    }\n  };\n\n  registerNode = (node: HTMLLogicNodeElement) => {\n    const id = nanoid();\n    node.id = id;\n    this.nodes.set(id, node);\n    return id;\n  };\n\n  unregisterNode = (id: string) => {\n    // remove all connections and connectors associated with the node\n    // get connectors\n    const node = this.nodes.get(id);\n    if (node) {\n      // TODO: not sure if this is necessary with mutation observer\n\n      // const connectors = node.querySelectorAll('logic-connector');\n      // connectors.forEach((connector: HTMLLogicConnectorElement) => {\n      //   const cid = connector.id;\n      //   // remove connections\n      //   connector.connections.forEach(\n      //     (connection: HTMLLogicConnectionElement) => {\n      //       const id = connection.id;\n      //       if (id) this.unregisterConnection(id);\n      //     },\n      //   );\n      //   // remove connector\n      //   this.unregisterConnector(cid);\n      // });\n\n      // remove from nodes\n      this.nodes.delete(id);\n    }\n  };\n\n  registerConnector = (connector: HTMLLogicConnectorElement) => {\n    const id = nanoid();\n    connector.id = id;\n    this.connectors.set(id, connector);\n    const connectorEl = connector.querySelector('.connector');\n    const rect = connectorEl.getBoundingClientRect();\n    this.connectorRects[id] = {\n      left: rect.x,\n      top: rect.y,\n      width: rect.width,\n      height: rect.height,\n    };\n\n    return id;\n  };\n\n  unregisterConnector = (id: string) => {\n    this.connectors.delete(id);\n    delete this.connectorRects[id];\n  };\n\n  registerConnection = (connection: HTMLLogicConnectionElement) => {\n    const id = nanoid();\n    connection.id = id;\n    this.connections.set(id, connection);\n    return id;\n  };\n\n  unregisterConnection = (id: string) => {\n    // remove from dom\n    const el = document.getElementById(id);\n    if (el) {\n      el.remove();\n    }\n    this.connections.delete(id);\n  };\n\n  // mutation observer callback\n  // when elements are added or removed from the dom\n  // we need to register or unregister them if they are nodes, connectors or connections\n  viewportMutation = (mutations: MutationRecord[]) => {\n    mutations.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        for (let i = 0; i < mutation.addedNodes.length; i++) {\n          const node = mutation.addedNodes[i];\n          if (node instanceof HTMLElement) {\n            if (node.tagName === 'LOGIC-NODE') {\n              const logicNode = node as HTMLLogicNodeElement;\n              this.registerNode(logicNode);\n            } else if (node.tagName === 'LOGIC-CONNECTOR') {\n              const logicConnector = node as HTMLLogicConnectorElement;\n              this.registerConnector(logicConnector);\n            } else if (node.tagName === 'LOGIC-CONNECTION') {\n              const logicConnection = node as HTMLLogicConnectionElement;\n              this.registerConnection(logicConnection);\n            }\n          }\n        }\n\n        for (let i = 0; i < mutation.removedNodes.length; i++) {\n          const node = mutation.removedNodes[i];\n          if (node instanceof HTMLElement) {\n            if (node.tagName === 'LOGIC-NODE') {\n              const logicNode = node as HTMLLogicNodeElement;\n              this.unregisterNode(logicNode.getAttribute('id'));\n            } else if (node.tagName === 'LOGIC-CONNECTOR') {\n              const logicConnector = node as HTMLLogicConnectorElement;\n              this.unregisterConnector(logicConnector.getAttribute('id'));\n            } else if (node.tagName === 'LOGIC-CONNECTION') {\n              const logicConnection = node as HTMLLogicConnectionElement;\n              this.unregisterConnection(logicConnection.getAttribute('id'));\n            }\n          }\n        }\n      }\n    });\n  };\n\n  static initializeViewport = (viewport: HTMLFlowyCanvasElement) => {\n    // need to register all nodes, connectors and connections\n    // that are already in the dom\n\n    const id = viewport.id;\n    const instance = ViewContext.instances.get(id);\n\n    const contentEl = viewport.querySelector('.flowy-content');\n    const children = contentEl.children;\n\n    const traverse = (el: HTMLElement) => {\n      if (el.tagName === 'LOGIC-NODE') {\n        const logicNode = el as HTMLLogicNodeElement;\n        instance.registerNode(logicNode);\n      } else if (el.tagName === 'LOGIC-CONNECTOR') {\n        const logicConnector = el as HTMLLogicConnectorElement;\n        instance.registerConnector(logicConnector);\n      } else if (el.tagName === 'LOGIC-CONNECTION') {\n        const logicConnection = el as HTMLLogicConnectionElement;\n        instance.registerConnection(logicConnection);\n      }\n\n      const children = el.children;\n      for (let i = 0; i < children.length; i++) {\n        traverse(children[i] as HTMLElement);\n      }\n    };\n\n    for (let i = 0; i < children.length; i++) {\n      traverse(children[i] as HTMLElement);\n    }\n  };\n\n  // getOppositeConnector = (connectionId: string, connectorId: string) => {\n  //   const connData = this.connectionRefs.get(connectionId);\n  //   if (!connData) {\n  //     throw new Error('Connection not found');\n  //   }\n\n  //   if (connData) {\n  //     if (connData.start.id === connectorId) {\n  //       return connData.end;\n  //     } else if (connData.end.id === connectorId) {\n  //       return connData.start;\n  //     }\n  //   }\n  // };\n}\n","import { Camera } from '../types/Camera';\n\nexport const renderCanvasGrid = (\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  gridSize: number,\n  color: string,\n  bgColor: string,\n  camera: Camera,\n) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n\n  let step = gridSize * camera.zoom;\n\n  // if the step is too small because of zoom, increase it by a factor of 10\n  if (step < 10) {\n    step *= 2;\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  canvas.width = width * dpr;\n  canvas.height = height * dpr;\n  ctx.scale(dpr, dpr);\n\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 1;\n\n  //clear\n  ctx.fillStyle = bgColor;\n  ctx.fillRect(0, 0, width, height);\n\n  const offsetX = (-camera.pos.x % gridSize) * camera.zoom;\n  const offsetY = (-camera.pos.y % gridSize) * camera.zoom;\n\n  ctx.beginPath();\n\n  for (let x = -offsetX; x < width; x += step) {\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, height);\n  }\n\n  for (let y = -offsetY; y < height; y += step) {\n    ctx.moveTo(0, y);\n    ctx.lineTo(width, y);\n  }\n\n  ctx.stroke();\n};\n\nexport const renderCanvasDotGrid = (\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  gridSize: number,\n  color: string,\n  bgColor: string,\n  camera: Camera,\n) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n\n  let step = gridSize * camera.zoom;\n\n  // if the step is too small because of zoom, increase it by a factor of 10\n  if (step < 10) {\n    step *= 2;\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  canvas.width = width * dpr;\n  canvas.height = height * dpr;\n  ctx.scale(dpr, dpr);\n\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 1;\n\n  //clear\n  ctx.fillStyle = bgColor;\n  ctx.fillRect(0, 0, width, height);\n\n  const offsetX = (-camera.pos.x % gridSize) * camera.zoom;\n  const offsetY = (-camera.pos.y % gridSize) * camera.zoom;\n\n  ctx.beginPath();\n\n  // for (let x = -offsetX; x < width; x += step) {\n  //   for (let y = -offsetY; y < height; y += step) {\n  //     ctx.moveTo(x, y);\n  //     ctx.arc(x, y, 1, 0, 2 * Math.PI);\n  //   }\n  // }\n\n  // more performant version - no nested loop\n  for (let x = -offsetX; x < width; x += step) {\n    for (let y = -offsetY; y < height; y += step) {\n      ctx.fillRect(x - 2, y - 2, 2, 2);\n    }\n  }\n\n  ctx.stroke();\n};\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { Coords } from '../../types/Coords';\nimport { debounce } from '../../utils/debounce';\nimport { throttle } from '../../utils/throttle';\nimport { getEventLocation } from '../../utils/getEventLocation';\nimport { Quadtree } from '../../types/Quadtree';\nimport { Camera } from '../../types/Camera';\nimport { ViewContext } from '../../types/ViewContext';\nimport {\n  renderCanvasDotGrid,\n  renderCanvasGrid,\n} from '../../utils/renderCanvasGrid';\n\n@Component({\n  tag: 'flowy-canvas',\n  styleUrl: 'flowy-canvas.css',\n  shadow: false,\n})\nexport class FlowyCanvas {\n  @Element() el: HTMLFlowyCanvasElement;\n\n  @Prop() showGrid: boolean = true;\n  @Prop() showDotGrid: boolean = false;\n  @Prop() gridSize: number = 20;\n  @Prop() gridBgColor: string = '#f7f7f7';\n  @Prop() gridLineColor: string = '#555555';\n  @Prop() maxZoom: number = 3;\n  @Prop() minZoom: number = 0.2;\n  @Prop() zoomSpeed: number = 0.08;\n  @Prop() snapToGrid: boolean = false;\n  @Prop() connectorSnappingDistance: number = 37;\n\n  ctx: ViewContext;\n  camera: Camera;\n  canvasEl: HTMLDivElement;\n  contentEl: HTMLDivElement;\n  gridEl: HTMLCanvasElement;\n  needsRedraw: boolean = true;\n  canvasRect: DOMRect;\n  quadtree: Quadtree;\n\n  initialPinchDistance: number = 0;\n  isDragging: boolean = false;\n  dragStart: Coords = { x: 0, y: 0 };\n\n  activeNode: HTMLLogicNodeElement;\n  activeNodeDragging: boolean = false;\n  activeNodeDragStart: Coords = { x: 0, y: 0 };\n  activeConnector: HTMLLogicConnectorElement;\n  activeConnectorStartPos: Coords = { x: 0, y: 0 };\n  activeConnection: HTMLLogicConnectionElement;\n\n  resizeObserver: ResizeObserver;\n  debouncedResize = debounce(() => this.onResize(), 16);\n  debouncedUpdateScreen = debounce(() => this.updateScreen(), 1);\n  throttledTouchMove = throttle(e => this.handleTouchMove(e), 1);\n  forceContentReflowDebounced = debounce(() => this.forceContentReflow(), 30);\n\n  elMouseDown = (e: MouseEvent | TouchEvent) => this.onPointerDown(e);\n  elMouseUp = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n  elMouseMove = (e: MouseEvent | TouchEvent) => this.onPointerMove(e);\n\n  elTouchStart = (e: TouchEvent) => this.handleTouchStart(e);\n  elTouchMove = (e: TouchEvent) => this.throttledTouchMove(e);\n  elTouchEnd = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n\n  elWheel = (e: WheelEvent) => this.handleWheel(e);\n\n  componentDidLoad() {\n    this.ctx = new ViewContext(this.el);\n    this.camera = this.ctx.camera;\n\n    this.canvasEl = this.el.querySelector('.flowy-canvas') as HTMLDivElement;\n    this.contentEl = this.el.querySelector('.flowy-content') as HTMLDivElement;\n    this.gridEl = this.el.querySelector('.flowy-grid') as HTMLCanvasElement;\n    this.canvasRect = this.canvasEl.getBoundingClientRect();\n    this.initialPinchDistance = 0;\n\n    const canvasEl = this.canvasEl;\n\n    // setup event listeners\n    window.addEventListener('mousedown', this.elMouseDown, {\n      passive: true,\n    });\n    canvasEl.addEventListener('mouseup', this.elMouseUp, { passive: true });\n    canvasEl.addEventListener('mousemove', this.elMouseMove, {\n      passive: true,\n    });\n\n    canvasEl.addEventListener('touchstart', this.elTouchStart, {\n      passive: true,\n    });\n    canvasEl.addEventListener('touchmove', this.elTouchMove, {\n      passive: true,\n    });\n    canvasEl.addEventListener('touchend', this.elTouchEnd, { passive: true });\n\n    canvasEl.addEventListener('wheel', this.elWheel, { passive: false });\n\n    //create quadtree\n    const boundary = {\n      x: 0,\n      y: 0,\n      width: this.canvasRect.width,\n      height: this.canvasRect.height,\n    };\n\n    this.quadtree = new Quadtree(boundary, 4, this.camera);\n    this.ctx.quadtree = this.quadtree;\n\n    // Handle resize events\n    this.resizeObserver = new ResizeObserver(() => this.debouncedResize());\n    this.resizeObserver.observe(this.canvasEl);\n\n    this.renderGrid();\n  }\n\n  disconnectedCallback() {\n    // Clean up resize observer\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Clean up event listeners\n    const canvasEl = this.canvasEl;\n    window.removeEventListener('mousedown', this.elMouseDown);\n    canvasEl.removeEventListener('mouseup', this.elMouseUp);\n    canvasEl.removeEventListener('mousemove', this.elMouseMove);\n\n    canvasEl.removeEventListener('touchstart', this.elTouchStart);\n    canvasEl.removeEventListener('touchmove', this.elTouchMove);\n    canvasEl.removeEventListener('touchend', this.elTouchEnd);\n\n    canvasEl.removeEventListener('wheel', this.elWheel);\n\n    this.ctx.destroy();\n  }\n\n  scheduleComponentUpdate() {\n    this.needsRedraw = true;\n    this.debouncedUpdateScreen();\n  }\n\n  onResize() {\n    this.needsRedraw = true;\n    this.canvasRect = this.canvasEl.getBoundingClientRect();\n    this.renderGrid();\n    // update quadtree boundary\n    const boundary = {\n      x: 0,\n      y: 0,\n      width: this.canvasRect.width,\n      height: this.canvasRect.height,\n    };\n    this.quadtree.boundary = boundary;\n  }\n\n  renderGrid() {\n    if ((!this.showGrid && !this.showDotGrid) || !this.needsRedraw) return;\n\n    requestAnimationFrame(() => {\n      if (this.showGrid) {\n        renderCanvasGrid(\n          this.gridEl,\n          this.canvasRect.width,\n          this.canvasRect.height,\n          this.gridSize,\n          this.gridLineColor,\n          this.gridBgColor,\n          this.camera,\n        );\n      }\n\n      if (this.showDotGrid) {\n        renderCanvasDotGrid(\n          this.gridEl,\n          this.canvasRect.width,\n          this.canvasRect.height,\n          this.gridSize,\n          this.gridLineColor,\n          this.gridBgColor,\n          this.camera,\n        );\n      }\n    });\n\n    this.needsRedraw = false;\n  }\n\n  updateScreen() {\n    requestAnimationFrame(() => {\n      const contentEl = this.contentEl;\n      // Apply transformations to the content, aligning with the grid\n      contentEl.style.transform = `perspective(1px) scale(${this.camera.zoom}) translate(${this.camera.pos.x}px, ${this.camera.pos.y}px)`;\n      this.renderGrid();\n    });\n  }\n\n  onPointerDown(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n    const worldCoords = this.camera.toWorldCoords(loc);\n\n    let target = event.target as HTMLElement;\n    target = document.elementFromPoint(loc.x, loc.y) as HTMLElement;\n\n    // if a connection clicked\n    const connection = target.closest('logic-connection');\n    if (connection) {\n      const snappableConnector = this.quadtree.checkNearby(\n        loc.x,\n        loc.y,\n        this.connectorSnappingDistance * this.camera.zoom,\n      );\n      if (snappableConnector) {\n        // set mouse cursor to grabbing\n        window.document.body.style.cursor = 'grabbing';\n\n        // this.isReconnectAttempt = true;\n        // if connector is close, then disconnect and setup as current dragging connection\n        this.activeConnection = connection as HTMLLogicConnectionElement;\n\n        const snapConn = this.ctx.connectors.get(snappableConnector.id);\n\n        this.activeConnector =\n          snapConn.connectingConnector as HTMLLogicConnectorElement;\n\n        this.activeConnector.connections =\n          this.activeConnector.connections.filter(\n            conn => conn !== this.activeConnection,\n          );\n\n        snapConn.connections = snapConn.connections.filter(\n          conn => conn !== this.activeConnection,\n        );\n\n        // if selected output connector, swap start and end\n        if (this.activeConnector.type === 'input') {\n          // const temp = connData.start;\n          // connData.start = connData.end;\n          // connData.end = temp;\n\n          // swap positions\n          const tempPos = this.activeConnection.start;\n          this.activeConnection.start = this.activeConnection.end;\n\n          this.activeConnection.end = tempPos;\n\n          // swap type\n          this.activeConnection.type = 'input';\n        }\n\n        // set connectingconnector to null\n        // connData.start.connectingConnector = null;\n        // connData.end.connectingConnector = null;\n        this.activeConnector.connectingConnector = null;\n        snapConn.connectingConnector = null;\n\n        return;\n      }\n    } else if (target.closest('.logic-connector .connector')) {\n      // set cursor to cell\n      window.document.body.style.cursor = 'grabbing';\n\n      this.activeConnector = target.closest(\n        'logic-connector .connector',\n      ) as HTMLLogicConnectorElement;\n      const parentConn = this.activeConnector.closest(\n        'logic-connector',\n      ) as HTMLLogicConnectorElement;\n      const aConnId = parentConn.id;\n      const rect = this.ctx.connectorRects[aConnId];\n      // account for node position and find center of connector\n      this.activeConnectorStartPos = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2,\n      };\n\n      // create a new connection element\n      const connection = document.createElement('logic-connection');\n      connection.start = this.activeConnectorStartPos;\n      connection.end = this.activeConnectorStartPos;\n      // set input or output based on activeconnector parent\n\n      connection.type = parentConn.type;\n      this.contentEl.appendChild(connection);\n      this.activeConnection = connection;\n      // Associate the connection with the connector\n      return;\n    } else if (target.closest('logic-node')) {\n      // set cursor to move\n      window.document.body.style.cursor = 'grabbing';\n\n      this.activeNode = target.closest('logic-node') as HTMLLogicNodeElement;\n      // bring active node to front by moving element to the end of the parent\n\n      const pos = this.activeNode.position;\n\n      this.activeNodeDragStart = {\n        x: worldCoords.x - pos.x,\n        y: worldCoords.y - pos.y,\n      };\n      this.activeNodeDragging = true;\n\n      return;\n    }\n\n    // if nothing clicked, then start panning\n    // set cursor to grabbing\n    window.document.body.style.cursor = 'grabbing';\n\n    this.isDragging = true;\n\n    this.dragStart = worldCoords;\n  }\n\n  onPointerUp(event: MouseEvent | TouchEvent) {\n    // event.stopPropagation();\n    if (this.activeConnector && this.activeConnection) {\n      const loc = getEventLocation(event);\n      let target = event.target as HTMLElement;\n      if (event instanceof TouchEvent) {\n        target = document.elementFromPoint(loc.x, loc.y) as HTMLElement;\n      }\n\n      let targetConnector = target.closest(\n        'logic-connector .connector',\n      ) as HTMLLogicConnectorElement;\n\n      const snappedConnector = this.quadtree.checkNearby(\n        loc.x,\n        loc.y,\n        this.connectorSnappingDistance * this.camera.zoom,\n      );\n      if (snappedConnector) {\n        targetConnector = this.ctx.connectors.get(snappedConnector.id);\n      }\n\n      if (targetConnector) {\n        let aConn = this.activeConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n        let tConn = targetConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n\n        // find parent node of each\n        const aNode = aConn.closest('logic-node') as HTMLLogicNodeElement;\n        const tNode = tConn.closest('logic-node') as HTMLLogicNodeElement;\n\n        // make sure not already connected to this connector\n        if (\n          this.activeConnector.connectingConnector === tConn ||\n          tConn.connectingConnector === aConn\n        ) {\n          console.log('already connected');\n          this.activeConnection.remove();\n          this.activeConnector = null;\n          this.activeConnection = null;\n          return;\n        }\n\n        // make sure not connecting to itself\n        else if (aNode === tNode || this.activeConnector === targetConnector) {\n          console.log('connecting to itself');\n          this.activeConnection.remove();\n          this.activeConnector = null;\n          this.activeConnection = null;\n          return;\n        }\n\n        // make sure only input to output or output to input\n        else if (aConn.type === tConn.type) {\n          console.log('connecting same type');\n          this.activeConnection.remove();\n          this.activeConnector = null;\n          this.activeConnection = null;\n          return;\n        }\n\n        // const targRect = targetConnector.getBoundingClientRect();\n        const targRect = this.ctx.connectorRects[tConn.getAttribute('id')];\n\n        // like above but if went from input to output, then start is the target and end is the active\n        // treat as though drawn from target to active\n        if (aConn.type === 'input') {\n          this.activeConnection.start = {\n            x: targRect.left + targRect.width / 2,\n            y: targRect.top + targRect.height / 2,\n          };\n\n          this.activeConnection.end = this.activeConnectorStartPos;\n          this.activeConnection.type = 'output';\n\n          // set connection to rect\n          const rect = this.ctx.connectorRects[aConn.id];\n          this.activeConnection.end = {\n            x: rect.left + rect.width / 2,\n            y: rect.top + rect.height / 2,\n          };\n        } else {\n          this.activeConnection.end = {\n            x: targRect.left + targRect.width / 2,\n            y: targRect.top + targRect.height / 2,\n          };\n        }\n\n        // get parent logic-connector from activeConnector and targetConnector\n\n        aConn.connectingConnector = tConn;\n        aConn.connections.push(this.activeConnection);\n        tConn.connectingConnector = aConn;\n        tConn.connections.push(this.activeConnection);\n      } else {\n        this.activeConnection.remove();\n      }\n      this.activeConnector = null;\n      this.activeConnection = null;\n    } else if (this.activeNode && this.activeNodeDragging) {\n      this.activeNodeDragging = false;\n      // update connector in quadtree\n      const connectors = this.activeNode.querySelectorAll(\n        'logic-connector',\n      ) as NodeListOf<HTMLLogicConnectorElement>;\n\n      for (let i = 0; i < connectors.length; i++) {\n        const connector = connectors[i];\n        const connectorId = connector.getAttribute('id');\n        const rect = this.ctx.connectorRects[connectorId];\n        this.quadtree.remove(connectorId);\n        this.quadtree.insert({\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2,\n          id: connectorId,\n        });\n      }\n\n      this.activeNode = null;\n    }\n\n    this.isDragging = false;\n    this.initialPinchDistance = 0;\n    window.document.body.style.cursor = 'auto';\n  }\n\n  onPointerMove(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n\n    if (this.activeConnector && this.activeConnection) {\n      const aConn = this.activeConnection;\n      const worldCoords = this.camera.toWorldCoords(loc);\n      // requestAnimationFrame(() => {\n      const snappableConnector = this.quadtree.checkNearby(\n        loc.x,\n        loc.y,\n        this.connectorSnappingDistance * this.camera.zoom,\n        // this.camera.pos,\n        // this.camera.zoom,\n      );\n      if (snappableConnector) {\n        const rect = this.ctx.connectorRects[snappableConnector.id];\n        const pos = {\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2,\n        };\n        aConn.end = pos;\n      } else {\n        const pos = worldCoords;\n        aConn.end = pos;\n      }\n      // });\n      return;\n    } else if (this.activeNode && this.activeNodeDragging) {\n      const aNode = this.activeNode;\n      const worldCoords = this.camera.toWorldCoords(loc);\n      const aNodeOldPos = aNode.position;\n\n      let newX = worldCoords.x - this.activeNodeDragStart.x;\n      let newY = worldCoords.y - this.activeNodeDragStart.y;\n\n      // snap to grid\n      if (this.snapToGrid) {\n        const gridSize = this.gridSize;\n        newX = Math.round(newX / gridSize) * gridSize;\n        newY = Math.round(newY / gridSize) * gridSize;\n      }\n\n      const delta = {\n        x: newX - aNodeOldPos.x,\n        y: newY - aNodeOldPos.y,\n      };\n\n      // update connections\n      const connectors = aNode.querySelectorAll(\n        'logic-connector',\n      ) as NodeListOf<HTMLLogicConnectorElement>;\n\n      for (let i = 0; i < connectors.length; i++) {\n        const connector = connectors[i];\n\n        const connId = connector.getAttribute('id');\n\n        // update connections\n        // update rect\n        let rect = { ...this.ctx.connectorRects[connId] };\n        rect = {\n          left: rect.left + delta.x,\n          top: rect.top + delta.y,\n          width: rect.width,\n          height: rect.height,\n        };\n        this.ctx.connectorRects[connId] = rect;\n\n        if (connector.connections.length) {\n          const pos = {\n            x: rect.left + rect.width / 2,\n            y: rect.top + rect.height / 2,\n          };\n\n          for (let i = 0; i < connector.connections.length; i++) {\n            const connection = connector.connections[i];\n            if (connector.type === 'input') {\n              connection.end = pos;\n            } else {\n              connection.start = pos;\n            }\n          }\n        }\n      }\n\n      aNode.position = { x: newX, y: newY };\n      // });\n\n      return;\n    }\n\n    if (this.isDragging) {\n      // this.lastPan = this.camera.pos;\n      const loc = getEventLocation(event);\n      this.camera.pos = {\n        x: loc.x / this.camera.zoom - this.dragStart.x,\n        y: loc.y / this.camera.zoom - this.dragStart.y,\n      };\n      this.scheduleComponentUpdate();\n    }\n  }\n\n  handleWheel(event: WheelEvent) {\n    event.preventDefault();\n\n    const canvasRect = this.canvasRect;\n    const mouseX = event.clientX - canvasRect.left;\n    const mouseY = event.clientY - canvasRect.top;\n\n    // Calculate the zoom level change\n    const zoomDelta = event.deltaY < 0 ? this.zoomSpeed : -this.zoomSpeed;\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.camera.zoom + zoomDelta),\n    );\n\n    // Calculate the scale factor\n    const scaleFactor = newZoom / this.camera.zoom;\n\n    // Adjust the pan position to keep the same point under the cursor\n    const newPanX =\n      mouseX - (mouseX - this.camera.pos.x * this.camera.zoom) * scaleFactor;\n    const newPanY =\n      mouseY - (mouseY - this.camera.pos.y * this.camera.zoom) * scaleFactor;\n\n    // Update pan and zoom\n    this.camera.pos = { x: newPanX / newZoom, y: newPanY / newZoom };\n    // this.lastZoom = this.camera.zoom;\n    this.camera.zoom = newZoom;\n\n    // if zooming in, force a reflow to prevent blurry text\n    if (zoomDelta > 0) {\n      this.forceContentReflowDebounced();\n    }\n\n    // this.needsRedraw = true;\n    this.scheduleComponentUpdate();\n  }\n\n  handleTouchStart(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> start panning\n      this.onPointerDown(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> start pinch zoom\n      this.initialPinchDistance = 0; // Reset initial pinch distance\n      this.handlePinch(event); // Start pinch gesture\n    }\n  }\n\n  handleTouchMove(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> panning\n      this.onPointerMove(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> pinch zooming\n      this.handlePinch(event);\n    }\n  }\n\n  handlePinch(event: TouchEvent) {\n    if (event.touches.length !== 2) return;\n\n    // handle panning while pinching\n    this.onPointerMove(event);\n\n    event.preventDefault(); // Prevent default behavior like scrolling\n\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n\n    // Calculate the distance between the two touch points (pinch)\n    const distance = Math.sqrt(\n      (touch1.clientX - touch2.clientX) ** 2 +\n        (touch1.clientY - touch2.clientY) ** 2,\n    );\n\n    if (this.initialPinchDistance === 0) {\n      // If it's the start of the pinch, initialize the pinch distance\n      this.initialPinchDistance = distance;\n    } else {\n      // Calculate the scale factor based on the distance change\n      const scaleFactor = distance / this.initialPinchDistance;\n\n      // Calculate the midpoint between the two fingers (the pinch center)\n      const pinchCenterX = (touch1.clientX + touch2.clientX) / 2;\n      const pinchCenterY = (touch1.clientY + touch2.clientY) / 2;\n\n      // Apply zoom and keep the pinch center fixed\n      this.adjustZoomOnPinch(scaleFactor, pinchCenterX, pinchCenterY);\n\n      // Update the initial pinch distance for the next move\n      this.initialPinchDistance = distance;\n    }\n  }\n\n  adjustZoomOnPinch(\n    scaleFactor: number,\n    pinchCenterX: number,\n    pinchCenterY: number,\n  ) {\n    // Calculate new zoom, ensuring it stays within min/max bounds\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.camera.zoom * scaleFactor),\n    );\n\n    // Find the pinch center position relative to the content's current position and zoom\n    const pinchContentX =\n      (pinchCenterX - this.camera.pos.x * this.camera.zoom) / this.camera.zoom;\n    const pinchContentY =\n      (pinchCenterY - this.camera.pos.y * this.camera.zoom) / this.camera.zoom;\n\n    // Adjust pan so the pinch center stays fixed after zooming\n    this.camera.pos = {\n      x: pinchCenterX / newZoom - pinchContentX,\n      y: pinchCenterY / newZoom - pinchContentY,\n    };\n\n    // Apply the new zoom level\n    this.camera.zoom = newZoom;\n\n    // Trigger a screen redraw\n    this.debouncedUpdateScreen();\n  }\n\n  forceContentReflow() {\n    // force repaint the content\n    const cdisplay = this.contentEl.style.display;\n    this.contentEl.style.display = 'none';\n    this.contentEl.offsetHeight; // trigger reflow\n    this.contentEl.style.display = cdisplay;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"flowy-canvas\">\n          <canvas class=\"flowy-grid\"></canvas>\n          <div class=\"flowy-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
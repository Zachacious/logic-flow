{"file":"flowy-canvas.entry.esm.js","mappings":"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","names":[],"sources":["src/utils/throttle.ts","src/utils/getEventLocation.ts","src/components/flowy-canvas/flowy-canvas.css?tag=flowy-canvas","src/components/flowy-canvas/flowy-canvas.tsx"],"sourcesContent":["export const throttle = (fn: (...args: any[]) => void, delay: number) => {\n  let lastFunc: ReturnType<typeof setTimeout>;\n  let lastRan: number;\n  return (...args: any[]) => {\n    if (!lastRan) {\n      fn(...args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(() => {\n        if (Date.now() - lastRan >= delay) {\n          fn(...args);\n          lastRan = Date.now();\n        }\n      }, delay - (Date.now() - lastRan));\n    }\n  };\n};\n","export const getEventLocation = (e: MouseEvent | TouchEvent) => {\n  if (e instanceof MouseEvent) {\n    return { x: e.clientX, y: e.clientY };\n  } else if (e instanceof TouchEvent && e.touches.length > 0) {\n    return { x: e.touches[0].clientX, y: e.touches[0].clientY };\n  }\n  return { x: 0, y: 0 };\n};\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { Point } from '../../types/Point';\nimport { debounce } from '../../utils/debounce';\nimport { throttle } from '../../utils/throttle';\nimport { getEventLocation } from '../../utils/getEventLocation';\nimport { nanoid } from 'nanoid';\nimport { LogicNode } from '../logic-node/logic-node';\n\n@Component({\n  tag: 'flowy-canvas',\n  styleUrl: 'flowy-canvas.css',\n  shadow: false,\n})\nexport class FlowyCanvas {\n  @Element() el: HTMLElement;\n\n  @Prop() renderGrid: boolean = true;\n  @Prop() gridSize: number = 20;\n  @Prop() gridBgColor: string = '#f3f3f3';\n  @Prop() gridLineColor: string = '#555555';\n  @Prop() maxZoom: number = 3;\n  @Prop() minZoom: number = 0.2;\n  @Prop() zoomSpeed: number = 0.08;\n\n  @State() zoom: number = 1;\n  @State() pan: Point = { x: 0, y: 0 };\n\n  private _uid: string = nanoid();\n  private _initialPinchDistance: number = 0;\n  private _isDragging: boolean = false;\n  private _dragStart: Point = { x: 0, y: 0 };\n\n  private _activeNode: HTMLLogicNodeElement;\n  private _activeNodeDragging: boolean = false;\n  private _activeNodeDragStart: Point = { x: 0, y: 0 };\n  private _activeConnector: HTMLLogicConnectorElement;\n  private _activeConnectorStartPos: Point = { x: 0, y: 0 };\n  private _activeConnection: HTMLLogicConnectionElement;\n\n  private _canvasEl: HTMLDivElement;\n  private _contentEl: HTMLDivElement;\n  private _gridEl: HTMLCanvasElement;\n  private _needsRedraw: boolean = true;\n  private _canvasRect: DOMRect;\n\n  private _resizeObserver: ResizeObserver;\n  private _debouncedResize = debounce(() => this.onResize(), 50);\n  private _debouncedUpdateScreen = debounce(() => this.updateScreen(), 5);\n  private _throttledPointerMove = throttle(e => this.onPointerMove(e), 30);\n  private _throttledTouchMove = throttle(e => this.handleTouchMove(e), 30);\n\n  private _elMouseDown = (e: MouseEvent | TouchEvent) => this.onPointerDown(e);\n  private _elMouseUp = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n  private _elMouseMove = (e: MouseEvent | TouchEvent) =>\n    this._throttledPointerMove(e);\n\n  private _elTouchStart = (e: TouchEvent) => this.handleTouchStart(e);\n  private _elTouchMove = (e: TouchEvent) => this._throttledTouchMove(e);\n  private _elTouchEnd = (e: MouseEvent | TouchEvent) => this.onPointerUp(e);\n\n  private _elWheel = (e: WheelEvent) => this.handleWheel(e);\n\n  componentDidLoad() {\n    this._canvasEl = this.el.querySelector('.flowy-canvas') as HTMLDivElement;\n    this._contentEl = this.el.querySelector('.flowy-content') as HTMLDivElement;\n    this._gridEl = this.el.querySelector('.flowy-grid') as HTMLCanvasElement;\n\n    this._canvasRect = this._canvasEl.getBoundingClientRect();\n\n    const canvasEl = this._canvasEl;\n    this.renderGridLines();\n\n    this._initialPinchDistance = 0;\n\n    // setup event listeners\n    window.addEventListener('mousedown', this._elMouseDown, {\n      passive: true,\n    });\n    canvasEl.addEventListener('mouseup', this._elMouseUp, { passive: true });\n    canvasEl.addEventListener('mousemove', this._elMouseMove, {\n      passive: true,\n    });\n\n    canvasEl.addEventListener('touchstart', this._elTouchStart, {\n      passive: false,\n    });\n    canvasEl.addEventListener('touchmove', this._elTouchMove, {\n      passive: true,\n    });\n    canvasEl.addEventListener('touchend', this._elTouchEnd, { passive: true });\n\n    canvasEl.addEventListener('wheel', this._elWheel, { passive: false });\n\n    // Handle resize events\n    this._resizeObserver = new ResizeObserver(() => this._debouncedResize());\n    this._resizeObserver.observe(this._canvasEl);\n  }\n\n  disconnectedCallback() {\n    // Clean up resize observer\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n\n    // Clean up event listeners\n    const canvasEl = this._canvasEl;\n    window.removeEventListener('mousedown', this._elMouseDown);\n    canvasEl.removeEventListener('mouseup', this._elMouseUp);\n    canvasEl.removeEventListener('mousemove', this._elMouseMove);\n\n    canvasEl.removeEventListener('touchstart', this._elTouchStart);\n    canvasEl.removeEventListener('touchmove', this._elTouchMove);\n    canvasEl.removeEventListener('touchend', this._elTouchEnd);\n\n    canvasEl.removeEventListener('wheel', this._elWheel);\n  }\n\n  @Watch('zoom')\n  zoomChanged() {\n    this._needsRedraw = true;\n    // this.updateScreen();\n    this._debouncedUpdateScreen();\n  }\n\n  @Watch('pan')\n  panChanged() {\n    this._needsRedraw = true;\n    // this.updateScreen();\n    this._debouncedUpdateScreen();\n  }\n\n  onResize() {\n    this._needsRedraw = true;\n    this._canvasRect = this._canvasEl.getBoundingClientRect();\n    this.renderGridLines();\n  }\n\n  renderGridLines() {\n    if (!this.renderGrid || !this._needsRedraw) return;\n\n    const canvasEl = this._gridEl;\n    const ctx = canvasEl.getContext('2d');\n    const width = this._canvasRect.width;\n    const height = this._canvasRect.height;\n    const step = this.gridSize * this.zoom;\n\n    const dpr = window.devicePixelRatio || 1;\n    canvasEl.width = width * dpr;\n    canvasEl.height = height * dpr;\n    ctx.scale(dpr, dpr);\n\n    ctx.strokeStyle = this.gridLineColor;\n    ctx.lineWidth = 1;\n\n    // clear\n    ctx.fillStyle = this.gridBgColor;\n    ctx.fillRect(0, 0, width, height);\n\n    const panOffsetX = (-this.pan.x % this.gridSize) * this.zoom;\n    const panOffsetY = (-this.pan.y % this.gridSize) * this.zoom;\n\n    ctx.beginPath();\n\n    // Draw vertical grid lines (x axis)\n    for (let x = -panOffsetX; x <= width; x += step) {\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n    }\n\n    // Draw horizontal grid lines (y axis)\n    for (let y = -panOffsetY; y <= height; y += step) {\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n    }\n\n    ctx.stroke();\n\n    this._needsRedraw = false;\n  }\n\n  updateScreen() {\n    // this.renderGridLines();\n    const contentEl = this._contentEl;\n    // Apply transformations to the content, aligning with the grid\n    contentEl.style.transform = `perspective(1px) scale(${this.zoom}) translate(${this.pan.x}px, ${this.pan.y}px)`;\n    requestAnimationFrame(() => this.renderGridLines());\n  }\n\n  // get location from event data for mouse or touch\n  getEventLocation(event: MouseEvent | TouchEvent) {\n    if (event instanceof TouchEvent) {\n      if (event.touches && event.touches[0]) {\n        return { x: event.touches[0].clientX, y: event.touches[0].clientY };\n      }\n    } else {\n      return { x: event.clientX, y: event.clientY };\n    }\n  }\n\n  onPointerDown(event: MouseEvent | TouchEvent) {\n    const loc = getEventLocation(event);\n\n    const target = event.target as HTMLElement;\n\n    if (target.closest('.logic-connector .connector')) {\n      this._activeConnector = target.closest(\n        'logic-connector .connector',\n      ) as HTMLLogicConnectorElement;\n      // this._activeConnector.isDrawing = true;\n      const rect = this._activeConnector.getBoundingClientRect();\n      // const node = this._activeConnector.closest('logic-node') as HTMLLogicNodeElement;\n      // const nodeRect = node.getBoundingClientRect();\n      // account for node position and find center of connector\n      this._activeConnectorStartPos = {\n        x: (rect.left + rect.width / 2) / this.zoom - this.pan.x,\n        y: (rect.top + rect.height / 2) / this.zoom - this.pan.y,\n      };\n      // console.log('connector start pos', this._activeConnectorStartPos);\n\n      // create a new connection element\n      const connection = document.createElement('logic-connection');\n      connection.start = this._activeConnectorStartPos;\n      connection.end = this._activeConnectorStartPos;\n      this._contentEl.appendChild(connection);\n      this._activeConnection = connection;\n      // Associate the connection with the connector\n      // this._activeConnector.connection = connection;\n      return;\n    } else if (target.closest('logic-node')) {\n      this._activeNode = target.closest('logic-node') as HTMLLogicNodeElement;\n      // bring active node to front by moving element to the end of the parent\n      // this._activeNode.parentNode.appendChild(this._activeNode);\n      const rect = this._activeNode.getBoundingClientRect();\n      this._activeNodeDragStart = {\n        x: (loc.x - rect.left) / this.zoom,\n        y: (loc.y - rect.top) / this.zoom,\n      };\n      this._activeNodeDragging = true;\n\n      return;\n    }\n\n    this._isDragging = true;\n\n    this._dragStart = {\n      x: loc.x / this.zoom - this.pan.x,\n      y: loc.y / this.zoom - this.pan.y,\n    };\n  }\n\n  onPointerUp(event: MouseEvent | TouchEvent) {\n    this._isDragging = false;\n    this._initialPinchDistance = 0;\n    // this._lastZoom = this.zoom;\n    this._activeNode = null;\n    this._activeNodeDragging = false;\n    if (this._activeConnector && this._activeConnection) {\n      const target = event.target as HTMLElement;\n      const targetConnector = target.closest(\n        'logic-connector .connector',\n      ) as HTMLLogicConnectorElement;\n\n      if (targetConnector) {\n        // make sure not already connected to this connector\n        if (this._activeConnector.connectingConnector === targetConnector) {\n          this._activeConnection.remove();\n          this._activeConnector = null;\n          this._activeConnection = null;\n          return;\n        }\n\n        const activeParent = this._activeConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n        const targetParent = targetConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n        // make sure only input to output or output to input\n        if (activeParent.type === targetParent.type) {\n          this._activeConnection.remove();\n          this._activeConnector = null;\n          this._activeConnection = null;\n          return;\n        }\n\n        this._activeConnection.end = {\n          x:\n            (targetConnector.getBoundingClientRect().left +\n              targetConnector.getBoundingClientRect().width / 2) /\n              this.zoom -\n            this.pan.x,\n          y:\n            (targetConnector.getBoundingClientRect().top +\n              targetConnector.getBoundingClientRect().height / 2) /\n              this.zoom -\n            this.pan.y,\n        };\n\n        // get parent logic-connector from activeConnector and targetConnector\n        const aConn = this._activeConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n        const tConn = targetConnector.closest(\n          'logic-connector',\n        ) as HTMLLogicConnectorElement;\n        aConn.connectingConnector = tConn;\n        aConn.connection = this._activeConnection;\n        tConn.connectingConnector = aConn;\n        tConn.connection = this._activeConnection;\n      } else {\n        this._activeConnection.remove();\n      }\n      this._activeConnector = null;\n      this._activeConnection = null;\n    }\n  }\n\n  onPointerMove(event: MouseEvent | TouchEvent) {\n    if (this._activeConnector) {\n      requestAnimationFrame(() => {\n        const loc = getEventLocation(event);\n        const pos = {\n          x: loc.x / this.zoom - this.pan.x,\n          y: loc.y / this.zoom - this.pan.y,\n        };\n        this._activeConnection.end = pos;\n      });\n      return;\n    } else if (this._activeNode && this._activeNodeDragging) {\n      const loc = getEventLocation(event);\n      const newX = loc.x / this.zoom - this._activeNodeDragStart.x - this.pan.x;\n      const newY = loc.y / this.zoom - this._activeNodeDragStart.y - this.pan.y;\n\n      this._activeNode.position = { x: newX, y: newY };\n\n      // update connections\n      const connectors = this._activeNode.querySelectorAll(\n        'logic-connector',\n      ) as NodeListOf<HTMLLogicConnectorElement>;\n\n      connectors.forEach(connector => {\n        if (connector.connection) {\n          const connectorHub = connector.querySelector('.connector');\n          const rect = connectorHub.getBoundingClientRect();\n          const pos = {\n            x: (rect.left + rect.width / 2) / this.zoom - this.pan.x,\n            y: (rect.top + rect.height / 2) / this.zoom - this.pan.y,\n          };\n\n          // set pos based on side of connector being dragged\n          // TODO: get this part right\n          if (connector.type === 'input') {\n            connector.connection.end = pos;\n          } else {\n            connector.connection.start = pos;\n          }\n        }\n      });\n\n      return;\n    }\n\n    if (this._isDragging) {\n      // this._lastPan = this.pan;\n      const loc = getEventLocation(event);\n      this.pan = {\n        x: loc.x / this.zoom - this._dragStart.x,\n        y: loc.y / this.zoom - this._dragStart.y,\n      };\n    }\n  }\n\n  handleWheel(event: WheelEvent) {\n    event.preventDefault();\n\n    const canvasRect = this._canvasRect;\n    const mouseX = event.clientX - canvasRect.left;\n    const mouseY = event.clientY - canvasRect.top;\n\n    // Calculate the zoom level change\n    const zoomDelta = event.deltaY < 0 ? this.zoomSpeed : -this.zoomSpeed;\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.zoom + zoomDelta),\n    );\n\n    // Calculate the scale factor\n    const scaleFactor = newZoom / this.zoom;\n\n    // Adjust the pan position to keep the same point under the cursor\n    const newPanX = mouseX - (mouseX - this.pan.x * this.zoom) * scaleFactor;\n    const newPanY = mouseY - (mouseY - this.pan.y * this.zoom) * scaleFactor;\n\n    // Update pan and zoom\n    this.pan = { x: newPanX / newZoom, y: newPanY / newZoom };\n    // this._lastZoom = this.zoom;\n    this.zoom = newZoom;\n    this._needsRedraw = true;\n  }\n\n  handleTouchStart(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> start panning\n      this.onPointerDown(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> start pinch zoom\n      this._initialPinchDistance = 0; // Reset initial pinch distance\n      this.handlePinch(event); // Start pinch gesture\n    }\n  }\n\n  handleTouchMove(event: TouchEvent) {\n    if (event.touches.length === 1) {\n      // Single touch -> panning\n      this.onPointerMove(event);\n    } else if (event.touches.length === 2) {\n      // Multi-touch -> pinch zooming\n      this.handlePinch(event);\n    }\n  }\n  handlePinch(event: TouchEvent) {\n    if (event.touches.length !== 2) return;\n\n    // handle panning while pinching\n    this.onPointerMove(event);\n\n    event.preventDefault(); // Prevent default behavior like scrolling\n\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n\n    // Calculate the distance between the two touch points (pinch)\n    const distance = Math.sqrt(\n      (touch1.clientX - touch2.clientX) ** 2 +\n        (touch1.clientY - touch2.clientY) ** 2,\n    );\n\n    if (this._initialPinchDistance === 0) {\n      // If it's the start of the pinch, initialize the pinch distance\n      this._initialPinchDistance = distance;\n    } else {\n      // Calculate the scale factor based on the distance change\n      const scaleFactor = distance / this._initialPinchDistance;\n\n      // Calculate the midpoint between the two fingers (the pinch center)\n      const pinchCenterX = (touch1.clientX + touch2.clientX) / 2;\n      const pinchCenterY = (touch1.clientY + touch2.clientY) / 2;\n\n      // Apply zoom and keep the pinch center fixed\n      this.adjustZoomOnPinch(scaleFactor, pinchCenterX, pinchCenterY);\n\n      // Update the initial pinch distance for the next move\n      this._initialPinchDistance = distance;\n    }\n  }\n\n  adjustZoomOnPinch(\n    scaleFactor: number,\n    pinchCenterX: number,\n    pinchCenterY: number,\n  ) {\n    // Calculate new zoom, ensuring it stays within min/max bounds\n    const newZoom = Math.min(\n      this.maxZoom,\n      Math.max(this.minZoom, this.zoom * scaleFactor),\n    );\n\n    // Find the pinch center position relative to the content's current position and zoom\n    const pinchContentX = (pinchCenterX - this.pan.x * this.zoom) / this.zoom;\n    const pinchContentY = (pinchCenterY - this.pan.y * this.zoom) / this.zoom;\n\n    // Adjust pan so the pinch center stays fixed after zooming\n    this.pan = {\n      x: pinchCenterX / newZoom - pinchContentX,\n      y: pinchCenterY / newZoom - pinchContentY,\n    };\n\n    // Apply the new zoom level\n    this.zoom = newZoom;\n\n    // Trigger a screen redraw\n    this._debouncedUpdateScreen();\n  }\n\n  render() {\n    return (\n      <Host id={this._uid}>\n        {/* <div class=\"flowy-virtual-area\"> */}\n        <div class=\"flowy-canvas\">\n          <canvas class=\"flowy-grid\"></canvas>\n          <div class=\"flowy-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
{"file":"flowy-canvas.entry.esm.js","mappings":"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","names":[],"sources":["src/components/flowy-canvas/flowy-canvas.css?tag=flowy-canvas","src/components/flowy-canvas/flowy-canvas.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import interact from '@interactjs/interact';\nimport { Component, Host, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { Point } from '../../types/Point';\n\n@Component({\n  tag: 'flowy-canvas',\n  styleUrl: 'flowy-canvas.css',\n  shadow: false,\n})\nexport class FlowyCanvas {\n  @Element() el: HTMLElement;\n\n  @Prop() renderGrid: boolean = true;\n  @Prop() gridSize: number = 20;\n  @Prop() gridBgColor: string = '#f3f3f3';\n  @Prop() gridLineColor: string = '#555555';\n  @Prop() maxZoom: number = 5;\n  @Prop() minZoom: number = 0.1;\n  @Prop() zoomSpeed: number = 0.05;\n\n  @State() zoom: number = 1;\n  @State() lastZoom: number = 1;\n  @State() initialPinchDistance: number = 0;\n  @State() pan: Point = { x: 0, y: 0 };\n  @State() isDragging: boolean = false;\n  @State() dragStart: Point = { x: 0, y: 0 };\n\n  // initialize the grid by adding css to the host element\n  componentDidLoad() {\n    const canvasEl = this.el.querySelector('.flowy-canvas') as HTMLElement;\n    // if (this.renderGrid) {\n    //   canvasEl.style.background = ` conic-gradient(from 90deg at 1px 1px, ${this.gridBgColor} 90deg, ${this.gridLineColor} 0) 0 0/${this.gridSize}px ${this.gridSize}px`;\n    // }\n    this.renderGridLines();\n\n    // use interact js\n    // const interactGrid = interact('.flowy-canvas');\n    this.initialPinchDistance = 0;\n    this.lastZoom = this.zoom;\n\n    // setup event listeners\n    // const canvasEl = this.el.querySelector('.flowy-virtual-area') as HTMLElement;\n    canvasEl.addEventListener('mousedown', e => this.onPointerDown(e));\n    canvasEl.addEventListener('touchstart', e => this.handleTouch(e, e => this.onPointerDown(e)));\n    canvasEl.addEventListener('mouseup', () => this.onPointerUp());\n    canvasEl.addEventListener('touchend', () => this.onPointerUp());\n    canvasEl.addEventListener('mousemove', e => this.onPointerMove(e));\n    canvasEl.addEventListener('touchmove', e => this.handleTouch(e, e => this.onPointerMove(e)));\n    canvasEl.addEventListener('wheel', e => {\n      e.preventDefault();\n\n      // Calculate the mouse position relative to the canvas\n      const canvasRect = canvasEl.getBoundingClientRect();\n      const mouseX = e.clientX - canvasRect.left;\n      const mouseY = e.clientY - canvasRect.top;\n\n      // Calculate the zoom level change\n      const zoomDelta = e.deltaY < 0 ? this.zoomSpeed : -this.zoomSpeed;\n      const newZoom = Math.min(this.maxZoom, Math.max(this.minZoom, this.zoom + zoomDelta));\n\n      // Calculate the scale factor\n      const scaleFactor = newZoom / this.zoom;\n\n      // Adjust the pan position to keep the same point under the cursor\n      const newPanX = mouseX - (mouseX - this.pan.x * this.zoom) * scaleFactor;\n      const newPanY = mouseY - (mouseY - this.pan.y * this.zoom) * scaleFactor;\n\n      // Update pan and zoom\n      this.pan = { x: newPanX / newZoom, y: newPanY / newZoom };\n      this.zoom = newZoom;\n    });\n  }\n\n  renderGridLines() {\n    if (this.renderGrid) {\n      // const canvasEl = this.el.querySelector('.flowy-canvas') as HTMLElement;\n      // canvasEl.style.background = ` conic-gradient(from 90deg at 1px 1px, ${this.gridBgColor} 90deg, ${this.gridLineColor} 0) 0 0/${this.gridSize * -this.zoom}px ${\n      //   this.gridSize * -this.zoom\n      // }px`;\n\n      const canvasEl = this.el.querySelector('.flowy-grid') as HTMLCanvasElement;\n      const ctx = canvasEl.getContext('2d');\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const step = this.gridSize * this.zoom;\n\n      canvasEl.width = width;\n      canvasEl.height = height;\n\n      ctx.strokeStyle = this.gridLineColor;\n      ctx.lineWidth = 1;\n\n      // clear\n      ctx.clearRect(0, 0, width, height);\n      // fill bg color\n      ctx.fillStyle = this.gridBgColor;\n      ctx.fillRect(0, 0, width, height);\n\n      ctx.beginPath();\n      for (let x = this.pan.x * this.zoom; x <= width; x += step) {\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n      }\n\n      for (let xleft = this.pan.x * this.zoom; xleft >= -width; xleft -= step) {\n        ctx.moveTo(xleft, 0);\n        ctx.lineTo(xleft, height);\n      }\n\n      for (let y = this.pan.y * this.zoom; y <= height; y += step) {\n        ctx.moveTo(0, y);\n        ctx.lineTo(width, y);\n      }\n\n      for (let ytop = this.pan.y * this.zoom; ytop >= -height; ytop -= step) {\n        ctx.moveTo(0, ytop);\n        ctx.lineTo(width, ytop);\n      }\n\n      ctx.stroke();\n    }\n  }\n\n  updateScreen() {\n    this.renderGridLines();\n    const contentEl = this.el.querySelector('.flowy-content') as HTMLElement;\n\n    // order of transform is important\n    // contentEl.style.transform = `translate(${this.pan.x}px, ${this.pan.y}px) scale(${this.zoom})`;\n    contentEl.style.transform = `scale(${this.zoom}) translate(${this.pan.x}px, ${this.pan.y}px)`;\n  }\n\n  @Watch('zoom')\n  zoomChanged() {\n    this.updateScreen();\n  }\n\n  @Watch('pan')\n  panChanged() {\n    this.updateScreen();\n  }\n\n  // get location from event data for mouse or touch\n  getEventLocation(event: MouseEvent | TouchEvent) {\n    if (event instanceof TouchEvent) {\n      if (event.touches && event.touches[0]) {\n        return { x: event.touches[0].clientX, y: event.touches[0].clientY };\n      }\n    } else {\n      return { x: event.clientX, y: event.clientY };\n    }\n  }\n\n  onPointerDown(event: MouseEvent | TouchEvent) {\n    this.isDragging = true;\n    const loc = this.getEventLocation(event);\n    this.dragStart = { x: loc.x / this.zoom - this.pan.x, y: loc.y / this.zoom - this.pan.y };\n  }\n\n  onPointerUp() {\n    this.isDragging = false;\n    this.initialPinchDistance = 0;\n    this.lastZoom = this.zoom;\n  }\n\n  onPointerMove(event: MouseEvent | TouchEvent) {\n    if (this.isDragging) {\n      const loc = this.getEventLocation(event);\n      this.pan = { x: loc.x / this.zoom - this.dragStart.x, y: loc.y / this.zoom - this.dragStart.y };\n    }\n  }\n\n  handleTouch(event: TouchEvent, singleTouchHandler: (touch: TouchEvent) => void) {\n    if (event.touches.length === 1) {\n      singleTouchHandler(event);\n    } else if (event.type === 'touchmove' && event.touches.length === 2) {\n      this.isDragging = false;\n      this.handlePinch(event);\n    }\n  }\n\n  handlePinch(event: TouchEvent) {\n    event.preventDefault();\n\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n    const distance = Math.sqrt((touch1.clientX - touch2.clientX) ** 2 + (touch1.clientY - touch2.clientY) ** 2);\n    if (this.initialPinchDistance === 0) {\n      this.initialPinchDistance = distance;\n    } else {\n      this.adjustZoom(0, distance / this.initialPinchDistance);\n    }\n    // const newZoom = this.lastZoom * (distance / this.initialPinchDistance);\n    // this.zoom = Math.min(this.maxZoom, Math.max(this.minZoom, newZoom));\n  }\n\n  adjustZoom(amount: number, scale: number) {\n    if (!this.isDragging) {\n      if (amount !== 0) {\n      } else if (scale !== 1) {\n        this.zoom = Math.min(this.maxZoom, Math.max(this.minZoom, this.zoom - scale));\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {/* <div class=\"flowy-virtual-area\"> */}\n        <div class=\"flowy-canvas\">\n          <canvas class=\"flowy-grid\"></canvas>\n          <div class=\"flowy-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
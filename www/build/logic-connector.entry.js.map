{"file":"logic-connector.entry.esm.js","mappings":";;;AAAA,MAAM,iBAAiB,GAAG,sBAAsB;;MCSnC,cAAc;;;QAOjB,SAAI,GAAW,MAAM,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBAJrB,OAAO;mCACW,IAAI;2BAChB,EAAE;;IAI3C,gBAAgB;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY,CAAgB,CAAC;QACrE,MAAM,IAAI,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;QAC/C,MAAM,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;YACnC,IAAI,EAAE,IAAI,CAAC,CAAC;YACZ,GAAG,EAAE,IAAI,CAAC,CAAC;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;IAED,MAAM;QACJ,MAAM,SAAS,GACb,IAAI,CAAC,IAAI,KAAK,OAAO,GAAG,gBAAgB,GAAG,iBAAiB,CAAC;QAC/D,MAAM,SAAS,GACb,IAAI,CAAC,IAAI,KAAK,OAAO,GAAG,iBAAiB,GAAG,kBAAkB,CAAC;QAEjE,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE,mBAAmB,SAAS,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,IACxD,4DACE,KAAK,EAAE,aAAa,SAAS,IAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WACjC,EAAE,GACG,EACP,4DAAK,KAAK,EAAE,qBAAqB,SAAS,EAAE,IAC1C,8DAAa,CACT,CACD,EACP;KACH;;;;;;;","names":[],"sources":["src/components/logic-connector/logic-connector.css?tag=logic-connector","src/components/logic-connector/logic-connector.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { LogicConnection } from '../logic-connection/logic-connection';\nimport { global } from '../../global';\n\n@Component({\n  tag: 'logic-connector',\n  styleUrl: 'logic-connector.css',\n  shadow: false,\n})\nexport class LogicConnector {\n  @Element() el: HTMLElement;\n\n  @Prop() type: 'input' | 'output' = 'input';\n  @Prop() connectingConnector: LogicConnector | null = null;\n  @Prop() connections: LogicConnection[] = [];\n\n  private _uid: string = global().registerConnector(this);\n\n  componentDidLoad() {\n    const connector = this.el.querySelector('.connector') as HTMLElement;\n    const rect = connector.getBoundingClientRect();\n    global().connectorRects[this._uid] = {\n      left: rect.x,\n      top: rect.y,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  render() {\n    const sideClass =\n      this.type === 'input' ? 'left-connector' : 'right-connector';\n    const typeClass =\n      this.type === 'input' ? 'input-connector' : 'output-connector';\n\n    return (\n      <Host class={`logic-connector ${typeClass}`} id={this._uid}>\n        <div\n          class={`connector ${sideClass} ${\n            this.connections.length > 0 && 'connected'\n          }`}\n        ></div>\n        <div class={`connector-content ${sideClass}`}>\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
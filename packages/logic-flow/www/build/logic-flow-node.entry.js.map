{"file":"logic-flow-node.entry.esm.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,sBAAsB;;MCQlC,aAAa;;;QAUxB,UAAK,GAAG,EAAE,CAAC;oBAPY,SAAS;oBACT,MAAM;wBACe,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;yBACZ,IAAI;0BAE5B,KAAK;;IAI3B,iBAAiB;;QAEf,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;KAC5D;IAGD,gBAAgB;;QAEd,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,eAAe;QACb,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;KACpF;IAED,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;KACF;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,QACE,EAAC,IAAI,qDAAC,KAAK,EAAC,iBAAiB,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,IAC7C,4DAAK,KAAK,EAAC,wBAAwB,IAChC,IAAI,CAAC,IAAI,EACV,6DAAM,IAAI,EAAC,QAAQ,GAAQ,CACvB,EACN,8DAAa,EACb,4DAAK,KAAK,EAAC,wBAAwB,IACjC,6DAAM,IAAI,EAAC,QAAQ,GAAQ,CACvB,CACD,EACP;KACH;;;;;;;;;;","names":[],"sources":["src/components/logic-flow-node/logic-flow-node.css?tag=logic-flow-node","src/components/logic-flow-node/logic-flow-node.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { Coords } from '../../types/Coords';\n\n@Component({\n  tag: 'logic-flow-node',\n  styleUrl: 'logic-flow-node.css',\n  shadow: false,\n})\nexport class LogicFlowNode {\n  @Element() el: HTMLElement;\n\n  @Prop() type: string = 'default';\n  @Prop() name: string = 'Node';\n  @Prop({ mutable: true }) position: Coords = { x: 0, y: 0 };\n  @Prop({ mutable: true }) isVisible: boolean = true;\n\n  @State() isDragging = false;\n\n  style = {};\n\n  componentWillLoad() {\n    //  set initial size\n    this.updateTransform();\n\n    this.position = { x: this.position.x, y: this.position.y };\n  }\n\n  @Watch('position')\n  onPositionChange() {\n    // update transform\n    this.updateTransform();\n  }\n\n  updateTransform() {\n    this.el.style.transform = `translate(${this.position.x}px, ${this.position.y}px )`;\n  }\n\n  componentWillRender() {\n    if (!this.isVisible) {\n      this.style = { display: 'none' };\n    } else {\n      this.style = {};\n    }\n  }\n\n  render() {\n    console.log('render', this.isVisible);\n    return (\n      <Host class=\"logic-flow-node\" style={this.style}>\n        <div class=\"logic-flow-node-header\">\n          {this.name}\n          <slot name=\"header\"></slot>\n        </div>\n        <slot></slot>\n        <div class=\"logic-flow-node-footer\">\n          <slot name=\"footer\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}